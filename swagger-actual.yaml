openapi: 3.0.0
servers:
  - url: 'https://api.avito.ru/'
info:
  version: '1'
  title: Авито API для бизнеса
  description: >
    # Общая информация

    Описание API произведено в формате [**Swagger
    3.0**](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md).

    Вы можете использовать данный файл для ознакомления с методами API, а также
    для генерации базового

    кода для работы с API на удобном для вас языке программирования с помощью
    утилиты

    [**Swagger Codegen**](https://swagger.io/swagger-codegen/) или online
    сервиса [**Swagger Editor**](https://editor.swagger.io/).


    **Авито API для бизнеса предоставляется согласно [Условиям
    использования](https://api.avito.ru/docs/public/APITermsOfServiceV1.pdf).**


    По всем вопросам работы с API необходимо обращаться в Службу Поддержки
    профессиональных инструментов:


    <li>телефон: <b>+7 495 777-10-66</b></li>

    <li>email: <a
    href="mailto:supportautoload@avito.ru">supportautoload@avito.ru</a></li>


    # Типы авторизации

    Для использования данного API запрос должен быть авторизован. В данный
    момент API Авито использует следующие механизмы авторизации.


    <!-- ReDoc-Inject: <security-definitions> -->


    Подробнее о каждом механизме и его назначении можно прочитать в
    соответствующем разделе.
  contact:
    email: supportautoload@avito.ru
tags:
  - name: Access
    x-displayName: Персональная авторизация
    description: >
      Для работы с API от своего лица необходимо получить токен авторизации —
      отдельный для каждой учетной записи на Авито.

        1. Получаем **client_id** и **client_secret** в Службе Поддержки
        2. Выписываем себе токен:
           ```
           curl -i 'https://api.avito.ru/token/?grant_type=client_credentials&client_id=<CLIENT_ID>&client_secret=<CLIENT_SECRET>'
           ```
        3. Далее выполняем запросы к API с заголовком `Authorization: Bearer <ACCESS_TOKEN>`

        Время действия токена ограничено - 1 час с момента его получения.
        После этого вам необходимо получить новый токен.
  - name: ApplicationAccess
    x-displayName: Авторизация для приложений
    description: >
      Для работы с API приложений от лица пользователя есть возможность получить
      токен через Authorization Code механизм протокола OAuth2. Для этого в
      первую очередь нужно зарегистрировать приложение через службу поддержки.
      После успешной регистрации ваше приложение получит возможность работать с
      API Авито от лица пользователя (если последний выдаст на это разрешение).


      Подробнее об Authorization Code флоу протокола OAuth2 можно почитать [в
      статье](https://www.digitalocean.com/community/tutorials/oauth-2-ru).
      Процесс работы с этим флоу в API Авито отличается только незначительными
      деталями – ниже по шагам описан процесс интеграции.


      Обратите внимание, что не все доступные API сейчас работают через механизм
      авторизации для приложений (в данный момент только API мессенджера Авито
      поддерживает этот механизм).


      ### Шаг 1: Регистрация приложения


      Регистрируем приложение через Службу Поддержки. Для регистрации нужно
      указать:


      * Имя приложения, которое будет выводиться пользователям в форме
      подтверждения прав

      * ID пользователя Авито, которому будут принадлежать права на
      зарегистрированное приложение

      * Redirect URI - адрес, на который сайт Авито средиректит пользователя
      после подтверждения прав

      * Скоупы, которые необходимы вашему приложению (подробнее о доступных
      скоупах ниже)

      * Описание приложения - для каких целей вы планируете использовать доступ
      к данным


      В данный момент мы регистрируем только доверенные приложения от наших
      партнеров.


      Скоупы определяют права, на которые ваше приложение сможет рассчитывать
      после подверждения авторизации пользователем. Доступные скоупы перечислены
      [тут](#section/Tipy-avtorizacii/Authorization%20Code).


      ### Шаг 2: Ссылка с кодом авторизации


      Сначала пользователю предоставляется ссылка следующего вида:


      ```

      https://avito.ru/oauth?response_type=code&client_id=<CLIENT_ID>&scope=messenger:read,messenger:write

      ```


      ### Шаг 3: Пользователь авторизует приложение


      Пользователь переходит по ссылке на Авито, аутентифицируется при
      необходимости, затем подтверждает выдачу необходимых прав вашему
      приложению.


      ### Шаг 4: Приложение получает код авторизации


      Если пользователь выбирает "Авторизовать приложение", Авито перенаправляет
      пользовательский агент (браузер) по URI перенаправления (Redirect URI),
      который был задан на этапе регистрации приложения и добавляет в него
      параметр `code`. Например, если при регистрации в качестве Redirect URI
      был указан адрес `https://example.com/callback/avito`, то мы перенаправим
      пользователя на:


      ```

      https://example.com/callback/avito?code=<AUTHORIZATION_CODE>

      ```


      ### Шаг 5: Приложение запрашивает токен доступа


      Приложение запрашивает токен доступа у API Авито путём отправки
      авторизационного кода и аутентификационной информации (включая секрет
      приложения). Ниже представлен пример GET-запроса для получения access
      token:


      ```

      https://api.avito.ru/token/?grant_type=authorization_code&client_id=<CLIENT_ID>&client_secret=<CLIENT_SECRET>&code=<AUTHORIZATION_CODE>

      ```


      ### Шаг 6: Приложение получает токен доступа


      Если авторизация прошла успешно, API возвращает токен доступа (а также
      токен для обновления токена доступа - refresh token). Весь ответ сервера
      может выглядеть следующим образом:


      ```

      {
          "access_token": "<ACCESS_TOKEN>",
          "expires_in": 3600,
          "refresh_token": "<REFRESH_TOKEN>",
          "scope": "messenger:read,messenger:write",
          "token_type": "Bearer"
      }

      ```


      Приложение сохраняет access_token и refresh_token.


      ### Шаг 7: Приложение делает запросы к API c токеном доступа


      Далее приложение может выполнять запросы к API с заголовком
      `Authorization: Bearer <ACCESS_TOKEN>`


      ### Шаг 8: Приложение обновляет access_token


      Время действия access token ограничено - 1 час с момента его получения.
      После этого вам необходимо получить новый токен.


      После истечения срока действия токена доступа все запросы к API с его
      использованием будут возвращать код ошибки 403. Сохраненный refresh token
      может быть использован для получения нового токена доступа от
      авторизационного сервера.


      Ниже представлен пример GET-запроса, использующего refresh token для
      обновления токена доступа:


      ```

      https://api.avito.ru/token/?grant_type=refresh_token&client_id=<CLIENT_ID>&client_secret=<CLIENT_SECRET>&refresh_token=<REFRESH_TOKEN>

      ```


      В ответ приложение получит точно такой же JSON, как и при обмене code на
      access token. При этом будет получен не только новый access_token, но и
      новый refresh_token. Обновите оба значения в своей базе данных.


      ### Дополнительный параметр state


      Для того чтобы защитить данные пользователей мы крайне рекомендуем
      использовать параметр state. Этот параметр позволяет защититься от
      CSRF-атак и восстановить состояние вашего приложения на момент начала
      авторизации. Подробнее, зачем нужен параметр state, можно прочитать
      [тут](https://auth0.com/docs/protocols/oauth2/oauth-state).


      Для того, чтобы использовать state – просто включите его в начальный URL:


      ```

      https://avito.ru/oauth?response_type=code&client_id=<CLIENT_ID>&scope=messenger:read,messenger:write&state=<STATE>

      ```


      В итоге state будет содержаться в финальном Redirect URI, на который Авито
      перенаправляет пользователя после подтверждения прав доступа. Например,
      если при регистрации в качестве Redirect URI был указан адрес
      `https://example.com/callback/avito`, то мы перенаправим пользователя на:


      ```

      https://example.com/callback/avito?code=<AUTHORIZATION_CODE>&state=<STATE>

      ```


      Не передавайте чувствительные данные в открытом виде в этом параметре.
      Генерируйте уникальное временное значение state в вашем приложении.
  - name: User
    x-displayName: Пользователь
    description: Методы API для получения информации о пользователе Авито
  - name: Autoload
    x-displayName: Сервис Автозагрузка
    description: Методы API для получения информации об автозагрузке объявлений
  - name: Item
    x-displayName: Объявления
    description: Общие методы API для работы с объявлениями на Авито
  - name: Autoteka
    x-displayName: Автотека
    description: >
      Методы API для работы с сервисом Автотека.


      Для того чтобы воспользоваться данным функционалом Вам необходимо стать
      партнером Автотеки.


      Стать официальным партнером и получить доступ к данным методам можно,

      подав заявку через [**Обратную связь с
      Autoteka**](https://autoteka.ru/feedback).


      В качестве темы запроса нужно указать **"Сотрудничество"**.



      **Алгоритм получения отчёта**

        1. Отправляем [запрос на создание превью по VIN](#operation/postPreviewByVin) или [запрос на создание превью по государственному номеру](#operation/postPreviewByRegNumber)
        2. Отправляем [запрос на получение превью по ID](#operation/getPreview)
        3. Проверяем статус:
            - Если `processing`, то повторяем шаг 2
            - Если `notFound`, то это значит, что по данному VIN нельзя сформировать отчёт
            - Если `success`, то отправляем [запрос на создание отчёта по превью](#operation/postReport)
  - name: Realty
    x-displayName: Краткосрочная аренда
    description: Методы API для партнёров для работы с API краткосрочной аренды (STR)
  - name: Job
    x-displayName: Работа
    description: |
      Методы API для работы с функциональностью вертикали Авито Работа.
  - name: Messenger
    x-displayName: Мессенджер
    description: >
      Методы API для работы с Мессенджером.


      ## Работа с API мессенджера


      API мессенджера предоставляет набор методов, необходимых для получения
      списка чатов пользователя на Авито, получения сообщений в чате, отправки
      сообщения в чат и другие. Благодаря этому API можно организовать
      интеграцию между мессенджером Авито и сторонней системой в обе стороны.


      **Важно!** API мессенджера Авито позволяет получить список сообщений в
      чате. **Не используйте данный метод для поллинга новых сообщений** на
      активном экране пользователя. Используйте только для изначальной отрисовки
      сообщений. Для получения обновлений в реальном времени используйте
      механизм webhooks (см. ниже). При активном поллинге со стороны клиентов
      API будет возвращать ошибку HTTP 429. Мы также можем полностью
      заблокировать ваш клиент в случае если он создает большую нагрузку на API.


      ## Уведомления


      **Уведомления** – HTTP POST запрос от Авито к вашему сайту или приложению,
      также их называют **webhooks**.

      Body запроса представляет собой JSON.



      Уведомления имеют версионирование. Подписаться на нужную версию
      уведомлений можно отправив запрос на соответствующую ручку:

      * messenger/v2/webhook - 2-я версия

      * messenger/v1/webhook - 1-я версия (**DEPRECATED**, используйте v2)


      Несколько важных моментов при работе с уведомлениями:

      * При получении вебхука ваш сервер должен обязательно вернуть HTTP status
      code 200

      * В случае сетевых ошибок, таймаутов и ответов с HTTP статус кодом >= 500
      мы пытаемся переотправить вебхук (несколько раз в течение нескольких
      секунд)

      * Если уведомление по пользователю длительное время отдает отличный от 200
      HTTP статус код – подписка пользователя будет автоматически удалена


      ### Уведомления V2

      HTTP запрос к вашей системе будет содержать следующий payload:

      ```

      {
        "id": "3cc1cbe7-6477-4aad-9272-952f8afb3c30",
        "version": "v2.0.0",
        "timestamp": 1587562733,
        "payload": {
          "type": "message",
          "value": {
            "id": "256347f56e4819deb6f8c59ff14d62a8",
            "type": "text",
            "chat_id": "u2i-1123-1123",
            "user_id": 94235311,
            "author_id": 78743309,
            "created": 1566290351,
            "content": {
              "text": "привет"
            }
          }
        }
      }

      ```


      Payload состоит из полей:

      * type – тип нотификации. На данный момент поддерживается только
      **message**. В будущем в рамках уведомлений v2 могут начать приходить
      новые типы нотификаций помимо **message**. Ваше приложение должно
      игнорировать неизвестные ему типы.

      * value – поля нотификации. В зависимости от типа нотификации, value будет
      иметь разные поля. **Необходимо** обрабатывать неизвестный тип
      уведомления.

      Если ваше приложение получило тип нотификации которое еще не
      поддерживается, то его нужно залогировать или пропустить, но **обязательно
      ответить HTTP кодом 200**.


      #### type:message

      Нотификация с типом message будет содержать value c полями:

      ```

      "value": {
        "id": "256347f56e4819deb6f8c59ff14d62a8",
        "type": "text",
        "chat_id": "u2i-1123-1123",
        "user_id": 94235311,
        "author_id": 78743309,
        "created": 1566290351,
        "content": {
          "text": "привет"
        }
      ```

      * id – идентификатор сообщения. Уникален только в рамках чата, в котором
      находится сообщение

      * chat_id – идентификатор чата

      * user_id – идентификатор пользователя, для которого пришло сообщение

      * author_id – идентификатор пользователя, создавшего сообщение

      * created – время создания сообщения, unix timestamp

      * type – тип сообщения. Типы сообщений поддерживаются: text, image, item,
      location, call, link

      * content – тело сообщения. Поля такие же как и в [API получения
      сообщений](https://api.avito.ru/docs/api.html#operation/getMessages)


      **Важно отметить**, что в мессенджере Авито есть системные сообщения в
      чатах. В данный момент они выглядят в API как текстовые сообщения с
      текстом `Сообщение не поддерживается. Пожалуйста, перейдите в Авито
      мессенджер <ССЫЛКА>`. В будущем мы планируем добавить полноценную
      поддержку платформенных сообщений в наше API.


      ### Уведомления V1 (DEPRECATED, используйте v2)

      HTTP запрос к вашей системе будет содержать следующий payload:

      ```

      {
          "id": "c7a799b4-c6f3-4d8c-88cc-6d7a1d69e6f8",
          "version": "v1.0.0",
          "timestamp": 1566290351,
          "messages": [
            {
              "id": "256347f56e4819deb6f8c59ff14d62a8",
              "chat_id": "u2i-1773856013-78743309",
              "user_id": 94235311,
              "author_id": 78743309,
              "created": 1566290351,
              "type": "text",
              "content": {
                "text": "asd"
              }
            }
          ]
        }
      ```

      Если тип сообщения не поддерживается в нотификациях, поле content будет
      пустым объектом.


      Уведомление содержит поля:

      * id – идентификатор уведомления. С его помощью вы можете определить
      доставлялось ли в вашему сайту такое уведомление или нет для избежания
      дублирования сообщений.

      * version – версия уведомлений. Версия отражает текущую структуру
      уведомлений: название и типы полей. Если изменится структура, то и
      изменится версия согласно Semantic Versioning Specification

      * timestamp – время создания уведомления, unix timestamp

      * messages – массив объектов сообщений


      Объекты массива **messages** содержат поля:

      * id – идентификатор сообщения. Уникален только в рамках чата, в котором
      находится сообщение

      * chat_id – идентификатор чата

      * user_id – идентификатор пользователя, для которого пришло сообщение

      * author_id – идентификатор пользователя, создавшего сообщение

      * created – время создания сообщения, unix timestamp

      * type – тип сообщения. Типы сообщений поддерживаются такие же как и в API
      получения сообщений

      * content – тело сообщения. Поля такие же как и в [API получения
      сообщений](https://api.avito.ru/docs/api.html#operation/getMessages)
  - name: Cpa
    x-displayName: CPA
    description: |
      Методы для работы с сервисом CPA
  - name: Marketplace
    x-displayName: Marketplace Partner API
    description: >
      Программный интерфейс доступа к заказам продавца,

      предназначенный для управления своими заказами через собственную
      логистическую систему учета заказов.
  - name: MarketplaceSandbox
    x-displayName: Marketplace Sandbox Partner API
    description: >
      Программный интерфейс доступа к заказам продавца,

      предназначенный для управления своими заказами через собственную
      логистическую систему учета заказов.


      Внимание! Это выделенный контур для выполнения запросов в тестовое
      окружение.

      Все запросы, выполняемые здесь изолированны от боевого контура Marketplace
      Partner API.
paths:
  /token/:
    get:
      tags:
        - Access
      operationId: getAccessToken
      summary: Получение access token
      description: Получения временного ключа для авторизации
      parameters:
        - name: grant_type
          description: Тип OAuth flow – строка client_credentials
          in: query
          required: true
          schema:
            type: string
        - name: client_id
          in: query
          required: true
          schema:
            type: string
        - name: client_secret
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    description: Ключ для временной авторизации в системе
                    type: string
                  expires_in:
                    description: Время жизни ключа в секундах
                    type: number
                    format: int32
                  token_type:
                    description: Тип ключа авторизации
                    type: string
              example:
                access_token: kChqt9ewQNAcwgbHp4yFd5
                expires_in: 3600
                token_type: Bearer
  /token/?grant_type=authorization_code:
    get:
      tags:
        - ApplicationAccess
      operationId: getAccessTokenAuthorizationCode
      summary: Получение access token
      description: Получения временного ключа для авторизации запроса от лица пользователя
      parameters:
        - name: grant_type
          description: Тип OAuth flow. Строка authorization_code
          in: query
          required: true
          schema:
            type: string
        - name: client_id
          in: query
          required: true
          schema:
            type: string
        - name: client_secret
          in: query
          required: true
          schema:
            type: string
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    description: Ключ для временной авторизации в системе
                    type: string
                  expires_in:
                    description: Время жизни ключа в секундах
                    type: number
                    format: int32
                  token_type:
                    description: Тип ключа авторизации
                    type: string
                  scope:
                    description: Полученный скоуп
                    type: string
                  refresh_token:
                    description: Ключ для обновления токена доступа
                    type: string
              example:
                access_token: kChqt9ewQNAcwgbHp4yFd5
                expires_in: 3600
                token_type: Bearer
                scope: 'messenger:read,messenger:write'
                refresh_token: QNAcwgbHQNAcwgbHkChqt9ewQNAcwgbHp4yFd5
  /token/?grant_type=refresh_token:
    get:
      tags:
        - ApplicationAccess
      operationId: refreshAccessTokenAuthorizationCode
      summary: Обновление access token
      description: Обновление временного ключа для авторизации запроса от лица пользователя
      parameters:
        - name: grant_type
          description: Тип OAuth flow. Строка refresh_token
          in: query
          required: true
          schema:
            type: string
        - name: client_id
          in: query
          required: true
          schema:
            type: string
        - name: client_secret
          in: query
          required: true
          schema:
            type: string
        - name: refresh_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    description: Новый ключ для временной авторизации в системе
                    type: string
                  expires_in:
                    description: Время жизни ключа в секундах
                    type: number
                    format: int32
                  token_type:
                    description: Тип ключа авторизации
                    type: string
                  scope:
                    description: Полученный скоуп
                    type: string
                  refresh_token:
                    description: Новый ключ для обновления токена доступа
                    type: string
              example:
                access_token: 5dFy4pHbgwcANQwe9tqhCk
                expires_in: 3600
                token_type: Bearer
                scope: 'messenger:read,messenger:write'
                refresh_token: 5dFy4pHbgwcANQwe9tqhCkHbgwcANQHbgwcANQ
  '/autoload/v1/accounts/{user_id}/reports/':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/authHeader'
    get:
      tags:
        - Autoload
      operationId: getReports
      summary: Список отчетов об автозагрузке
      description: |
        Отчеты отсортированы в порядке убывания даты загрузки,
        т.е. самый свежий отчет будет в самом начале списка
      security:
        - Authorization Code:
            - 'autoload:reports'
        - Client Credentials: []
      parameters:
        - $ref: '#/components/parameters/perPage'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  reports:
                    $ref: '#/components/schemas/ReportCollectionAutoload'
                  meta:
                    $ref: '#/components/schemas/MetaAutoload'
        default:
          description: Все ошибки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorAutoload'
  '/autoload/v1/accounts/{user_id}/reports/{reportId}/':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - name: reportId
        description: Идентификатор отчета
        in: path
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/authHeader'
    get:
      tags:
        - Autoload
      operationId: getReportById
      summary: Получение данных отчета по ID
      description: |
        Возвращает данные одного отчета об автозагрузке по ID отчета
      security:
        - Authorization Code:
            - 'autoload:reports'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  report:
                    $ref: '#/components/schemas/ReportAutoload'
        default:
          description: Все ошибки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorAutoload'
  '/autoload/v1/accounts/{user_id}/reports/last_report/':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/authHeader'
    get:
      tags:
        - Autoload
      operationId: getLastReport
      summary: Получение данных последнего актуального отчета
      description: |
        Возвращает данные отчета о последнем завершенном цикле автозагрузки
      security:
        - Authorization Code:
            - 'autoload:reports'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  report:
                    $ref: '#/components/schemas/ReportAutoload'
        default:
          description: Все ошибки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorAutoload'
  '/autoload/v1/accounts/{user_id}/items/{ad_id}/':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - name: ad_id
        description: Идентификатор объявления из XML
        in: path
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authHeader'
    get:
      tags:
        - Autoload
      operationId: getAutoloadItemInfo
      summary: Получение информации о выгрузке объявления
      description: |
        Возвращает данные отчета о выгрузке объявления на сайт **avito.ru**
      security:
        - Authorization Code:
            - 'autoload:reports'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemInfoAutoload'
        default:
          description: Все ошибки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldError'
  /core/v1/items:
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: per_page
        in: query
        description: Количество записей на странице (целое число больше 0 и меньше 100)
        required: false
        schema:
          type: integer
          format: int32
          default: 25
          example: 50
      - name: page
        in: query
        description: Номер страницы (целое число больше 0)
        required: false
        schema:
          type: integer
          format: int32
          default: 1
          example: 1
      - name: status
        in: query
        description: >-
          Статус объявления на сайте (можно указать несколько значений через
          запятую)
        required: false
        schema:
          type: string
          default: active
          example: 'active,old'
          enum:
            - active
            - removed
            - old
            - blocked
            - rejected
      - name: category
        in: query
        description: Идентификатор категории объявления
        required: false
        schema:
          type: integer
          format: int32
          example: 111
    get:
      tags:
        - Item
      operationId: getItemsInfo
      summary: Получение информации по объявлениям
      description: >
        Возвращает список объявлений авторизованного пользователя - статус,
        категорию и ссылку на сайте
      security:
        - Authorization Code:
            - 'items:info'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsInfoWithCategoryAvito'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldError'
  '/core/v1/accounts/{user_id}/items/{item_id}/':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathItemId'
      - $ref: '#/components/parameters/authHeader'
    get:
      tags:
        - Item
      operationId: getItemInfo
      summary: Получение информации по объявлению
      description: >
        Возвращает данные об объявлении - его статус, список примененных услуг,
        статистику просмотров


        **Внимание:** для получения статистики рекомендуется использование
        методов

        [Получение статистики по одному объявлению](#operation/itemStatsDeep)
        или

        [Получение статистики по списку объявлений](#operation/itemStatsShallow)
      security:
        - Authorization Code:
            - 'items:info'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemInfoAvito'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldError'
  '/core/v1/accounts/{user_id}/stats/items':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Item
      deprecated: true
      operationId: getItemsStats
      summary: Получение статистики по объявлениям
      description: >
        Получение статистики по списку идентификаторов объявлений на сайте.


        **Внимание:** это deprecated method, который будет выключен 1 декабря
        2020 года.


        **Внимание:** для получения статистики рекомендуется использование
        методов

        [Получение статистики по одному объявлению](#operation/itemStatsDeep)
        или

        [Получение статистики по списку объявлений](#operation/itemStatsShallow)
      security:
        - Authorization Code:
            - 'items:info'
        - Client Credentials: []
      requestBody:
        description: Набор идентификаторов объявлений на сайте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/itemIdsRequestBody'
            example:
              item_ids:
                - 1234567
                - 7654321
      responses:
        '200':
          x-examples:
            application/json:
              stats:
                <item_id_1>:
                  item_views: 0
                  contact_views: 0
                <item_id_2>:
                  item_views: 0
                  contact_views: 0
              errors:
                not_found:
                  - <item_id_3>
                  - <item_id_4>
                invalidate_values:
                  - <item_id_5>
                  - <item_id_6>
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    description: >-
                      Статистика просмотров объявления в формате ключ-значение,
                      где в качестве ключа выступает идентификатор объявления на
                      сайте
                    type: array
                    items:
                      $ref: '#/components/schemas/ItemsInfoAvito'
                  errors:
                    type: object
                    properties:
                      not_found:
                        description: >-
                          Список идентификаторов, которые не удалось найти -
                          отсутствуют на сайте, удалены или принадлежат другому
                          пользователю
                        type: array
                        items:
                          type: integer
                      invalidate_values:
                        type: array
                        description: >-
                          Список значений, которые не удалось распознать как
                          идентификаторы объявлений
                        items:
                          type: integer
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/core/v1/accounts/{user_id}/calls/stats/':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Item
      operationId: postCallsStats
      summary: Получение статистики по звонкам
      description: |
        Получение агрегированной статистики звонков, полученных пользователем
      security:
        - Authorization Code:
            - 'items:info'
        - Client Credentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallsStatsRequest'
            example:
              dateFrom: '2020-04-01'
              dateTo: '2020-04-08'
              itemIds:
                - 1853257996
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallsStatsResponse'
              example:
                result:
                  items:
                    - employeeId: 0
                      itemId: 1853257996
                      days:
                        - date: '2020-04-01'
                          calls: 0
                          answered: 0
                          new: 0
                          newAnswered: 0
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '404':
          description: Неверный user_id в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/core/v1/accounts/{user_id}/price/vas':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Item
      operationId: getVasPrices
      summary: Получение информации о стоимости дополнительных услуг
      description: >
        Возвращает в ответ объект со следующей структурой:

        - `vas` – объект, который содержит информацию о стоимости дополнительных
        услуг для каждого объявления.

        Ключами являются идентификаторы объявлений, значениями – объекты с
        информацией о стоимости услуг для данного объявления:
          - `highlight` — [услуга продвижения "Выделить"](https://support.avito.ru/articles/200026858)
          - `xl` – [услуга продвижения "XL-объявление"](https://support.avito.ru/articles/685)
        - `errors` – идентификаторы объявлений, для которых информация не
        получена.
      security:
        - Authorization Code:
            - 'items:info'
        - Client Credentials: []
      requestBody:
        description: Набор идентификаторов объявлений на сайте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/itemIdsRequestBody'
            example:
              item_ids:
                - 1234567
                - 7654321
                - id
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  vas:
                    $ref: '#/components/schemas/PriceInfoVas'
                  errors:
                    $ref: '#/components/schemas/ErrorItemsVas'
              example:
                vas:
                  '1234567':
                    highlight: 119
                    xl: 199
                errors:
                  - 7654321
                  - id
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/core/v1/accounts/{user_id}/price/vas_packages':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Item
      operationId: getVasPackagePrice
      summary: Получение информации о стоимости пакетов дополнительных услуг
      description: >
        Возвращает в ответ объект со следующей структурой:

        - `packages` – объект, который содержит информацию о стоимости пакетов
        дополнительных услуг для каждого объявления.

        Ключами являются идентификаторы объявлений, значениями – объекты с
        информацией о стоимости пакетов услуг для данного объявления:
          - `x2_1` - [пакет "до 2 раз больше просмотров на 1 день"](https://support.avito.ru/articles/1398)
          - `x2_7` - [пакет "до 2 раз больше просмотров на 7 дней"](https://support.avito.ru/articles/1398)
          - `x5_1` - [пакет "до 5 раз больше просмотров на 1 день"](https://support.avito.ru/articles/1398)
          - `x5_7` - [пакет "до 5 раз больше просмотров на 7 дней"](https://support.avito.ru/articles/1398)
          - `x10_1` - [пакет "до 10 раз больше просмотров на 1 день"](https://support.avito.ru/articles/1398)
          - `x10_7` - [пакет "до 10 раз больше просмотров на 7 дней"](https://support.avito.ru/articles/1398)
        - `errors` – идентификаторы объявлений, для которых информация не
        получена.
      security:
        - Authorization Code:
            - 'items:info'
        - Client Credentials: []
      requestBody:
        description: Набор идентификаторов объявлений на сайте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/itemIdsRequestBody'
            example:
              item_ids:
                - 1234567
                - 7654321
                - id
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  packages:
                    $ref: '#/components/schemas/PackagePriceInfoVas'
                  errors:
                    $ref: '#/components/schemas/ErrorItemsVas'
              example:
                packages:
                  '1234567':
                    x2_1: 599
                    x2_7: 799
                    x5_1: 1299
                    x5_7: 1599
                    x10_1: 2199
                    x10_7: 2999
                errors:
                  - 7654321
                  - id
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/core/v1/accounts/{user_id}/items/{item_id}/vas':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathItemId'
      - $ref: '#/components/parameters/authHeader'
    put:
      tags:
        - Item
      operationId: putItemVas
      summary: Применение дополнительных услуг
      description: >
        Применение дополнительной услуги к объявлению, в ответе возвращает
        данные о примененной услуге и сумму списания.

        [Более подробная информация по дополнительным
        услугам](https://support.avito.ru/sections/200009758)
      security:
        - Authorization Code:
            - 'items:apply_vas'
        - Client Credentials: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vasIdRequestBody'
            example:
              vas_id: highlight
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VasApplyAvito'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/core/v2/accounts/{user_id}/items/{item_id}/vas_packages':
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathItemId'
      - $ref: '#/components/parameters/authHeader'
    put:
      tags:
        - Item
      operationId: putItemVasPackageV2
      summary: Применение пакета дополнительных услуг
      description: >
        Применение пакета дополнительных услуг к объявлению, в ответе возвращает
        сумму списания
      security:
        - Authorization Code:
            - 'items:apply_vas'
        - Client Credentials: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/packageIdRequestBodyV2'
            example:
              package_id: x10_7
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VasAmountAvito'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/core/v1/accounts/{user_id}/items/{item_id}/bookings':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathItemId'
    post:
      tags:
        - Realty
      operationId: putBookingsInfo
      summary: Заполнение календаря занятости объекта недвижимости
      description: >
        Заполнение календаря занятости объекта недвижимости (для краткосрочной
        аренды)
      security:
        - Authorization Code:
            - 'short_term_rent:write'
        - Client Credentials: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCalendarData'
            example:
              bookings:
                - date_start: '2018-03-23'
                  date_end: '2018-03-25'
                - date_start: '2018-05-23'
                  date_end: '2018-07-25'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: Результат обработки запроса
                    enum:
                      - success
                      - fail
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /core/v1/accounts/self:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    get:
      tags:
        - User
      operationId: getUserInfoSelf
      summary: Получение информации об авторизованном пользователе
      description: |
        Возвращает идентификатор пользователя и его регистрационные данные
      security:
        - Authorization Code:
            - 'user:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoSelf'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '403':
          description: Неверный Token/Oauth Scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/core/v1/accounts/{user_id}/balance/':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
    get:
      tags:
        - User
      operationId: getUserBalance
      summary: Получение баланса кошелька пользователя
      description: >
        Возвращает сумму реальных денежных средств в кошельке, а также сумму
        бонусных средств
      security:
        - Authorization Code:
            - 'user_balance:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '403':
          description: Неверный Token/Oauth Scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenError'
        '404':
          description: Неверный user_id в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  /core/v1/accounts/operations_history/:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - User
      operationId: postOperationsHistory
      summary: Получение истории операций пользователя
      description: >
        Возвращает список операций пользователя (списания/пополнение кошелька -
        деньги и бонусы) за определенный временной период (задается
        пользователем)
      security:
        - Authorization Code:
            - 'user_operations:read'
        - Client Credentials: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOperationsHistory'
            example:
              dateTimeFrom: '2020-04-01T00:00:00'
              dateTimeTo: '2020-04-08T00:00:00'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOperationsHistory'
              example:
                operations:
                  - updatedAt: '2020-04-27T10:51:50.012436+03:00'
                    operationType: резервирование средств под услугу
                    serviceType: vas
                    serviceId: 16
                    serviceName: Сделать XL объявлением
                    operationName: >-
                      Резервирование средств. Услуга «Сделать XL объявлением»
                      для объявления №1853257996
                    amountTotal: 119
                    amountRub: 119
                    amountBonus: 0
                    itemId: 1853257996
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  /autoteka/v1/request-preview-by-item-id:
    post:
      parameters:
        - $ref: '#/components/parameters/authHeader'
      tags:
        - Autoteka
      operationId: postPreviewByItemId
      summary: Запрос на создание превью по ID объявления
      description: >
        Возвращает идентификатор `previewId`, по которому асинхронно с помощью
        [запроса на получение превью по ID](#operation/getPreview) можно
        получить результат
      security:
        - Authorization Code:
            - 'autoteka:previews'
        - Client Credentials: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPreviewByItemIdAutoteka'
            example:
              itemId: 1234567
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPreviewResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /autoteka/v1/request-preview-by-regnumber:
    post:
      parameters:
        - $ref: '#/components/parameters/authHeader'
      tags:
        - Autoteka
      operationId: postPreviewByRegNumber
      summary: Запрос на создание превью по государственному номеру
      description: >
        Возвращает идентификатор `previewId`, по которому асинхронно с помощью
        [запроса на получение превью по ID](#operation/getPreview) можно
        получить результат
      security:
        - Authorization Code:
            - 'autoteka:previews'
        - Client Credentials: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPreviewByRegNumberAutoteka'
            example:
              regNumber: X777XX777
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPreviewResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /autoteka/v1/previews:
    post:
      parameters:
        - $ref: '#/components/parameters/authHeader'
      tags:
        - Autoteka
      operationId: postPreviewByVin
      summary: Запрос на создание превью по VIN
      description: >
        Возвращает идентификатор `previewId`, по которому асинхронно с помощью
        [запроса на получение превью по ID](#operation/getPreview) можно
        получить результат
      security:
        - Authorization Code:
            - 'autoteka:previews'
        - Client Credentials: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPreviewByVinAutoteka'
            example:
              vin: XTA210990Y2766111
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPreviewResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/autoteka/v1/previews/{previewId}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: previewId
        required: true
        in: path
        schema:
          type: integer
        description: Идентификатор превью
    get:
      tags:
        - Autoteka
      operationId: getPreview
      summary: |
        Запрос на получение превью по ID
      description: >
        Возвращает текущий статус сбора информации превью, и краткую инфо по
        запрашиваемому `VIN`
      security:
        - Authorization Code:
            - 'autoteka:previews'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPreviewResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /autoteka/v1/reports:
    post:
      tags:
        - Autoteka
      operationId: postReport
      summary: |
        Запрос на создание отчета по превью
      description: >
        Метод для запроса отчета по `previewId`, возвращает идентификатор отчета
        по которому сформированный отчет можно получить в [методе для получения
        отчета по его идентификатору](#operation/getReport). При запросе
        происходит списание доступных отчетов
      security:
        - Authorization Code:
            - 'autoteka:reports'
        - Client Credentials: []
      parameters:
        - $ref: '#/components/parameters/authHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestReportByPreviewIdAutoteka'
            example:
              previewId: 1111
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReportResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/autoteka/v1/reports/{report_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: report_id
        in: path
        description: Идентификатор отчета.
        required: true
        schema:
          type: integer
    get:
      tags:
        - Autoteka
      operationId: getReport
      summary: |
        Метод для получения отчета по ID
      description: >
        Получение подробного отчета по его идентификатору, полученному из
        [запроса на создание отчета](#operation/postReport)
      security:
        - Authorization Code:
            - 'autoteka:reports'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /autoteka/v1/reports/list/:
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: lastReportId
        in: query
        description: Идентификатор отчета для получения данных постранично.
        schema:
          type: integer
      - name: limit
        in: query
        description: >-
          Количество отчетов в результате, максимальное значение 500, по
          умолчанию 20.
        schema:
          type: integer
    get:
      tags:
        - Autoteka
      operationId: getReportList
      summary: |
        Метод для получения списка отчётов
      description: >
        Получение списка запрошенных ранее отчетов [запроса на создание
        отчета](#operation/postReport)
      security:
        - Authorization Code:
            - 'autoteka:reports'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportsListResponseDataAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
    put:
      tags:
        - Autoteka
      operationId: putReport
      summary: >
        Метод для обновление отчета по его идентификатору в случае отсуствия
        данных
      description: >
        Запрос на перегенерацию отчета по ID, который был получен из [запроса на
        создание отчета](#operation/postReport)
      security:
        - Authorization Code:
            - 'autoteka:reports'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReportResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /autoteka/v1/packages/active_package:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    get:
      tags:
        - Autoteka
      operationId: getActivePackage
      summary: |
        Метод для запроса остатка отчётов в текущем пакете пользователя
      description: |
        Возвращает остаток отчётов в текущем пакете пользователя
      security:
        - Authorization Code:
            - 'autoteka:reports'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivePackageResponseBodyAutoteka'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /marketplace/shipment/getInfo:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Marketplace
      summary: Информация об отправлении
      description: |
        Возвращает информацию об отправлении по его идентификатору.
      security:
        - Client Credentials: []
      operationId: ShipmentGetInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentInfoRequest'
        required: true
  /marketplace/shipment/getList:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Marketplace
      summary: Список отправлений
      description: |
        Возвращает список отправлений за указанный период времени.

        Дополнительно можно отфильтровать отправления.

        Максимальное количество отправлений в ответе: 50
      security:
        - Client Credentials: []
      operationId: ShipmentGetList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentListReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentListRequest'
        required: false
  /marketplace/shipment/confirm:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Marketplace
      summary: Подтвердить отправление
      description: |
        Выполнить подтверждение отправления продавцом.
      security:
        - Client Credentials: []
      operationId: ShipmentConfirm
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentConfirmReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentConfirmRequest'
        required: true
  /marketplace/shipment/reject:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Marketplace
      summary: Отменить отправление
      description: |
        Выполнить отмену отправления продавцом.
      security:
        - Client Credentials: []
      operationId: ShipmentReject
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRejectReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentRejectRequest'
        required: true
  /marketplace/shipment/assemble:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Marketplace
      summary: Скомплектовать товар(-ы) для отправления
      description: |
        Выполнить комплектацию товара(-ов) для отправления продавцом
      security:
        - Client Credentials: []
      operationId: ShipmentAssemble
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentAssembleReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentAssembleRequest'
        required: true
  /marketplace/shipment/pickup:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Marketplace
      summary: Подтвердить отгрузку товара(-ов) на отправление
      description: |
        Подтвердить отгрузку товара(-ов) на отправление
      security:
        - Client Credentials: []
      operationId: ShipmentPickUp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentPickUpReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentPickUpRequest'
        required: true
  /marketplace/shipment/createAcceptanceCert:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Marketplace
      summary: Получить PDF-файл акта приёма-передачи
      description: |
        Получить PDF-файл акта приёма-передачи
      security:
        - Client Credentials: []
      operationId: ShipmentCreateAcceptanceCert
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentCreateAcceptanceCertReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
  /marketplace-sandbox/shipment/getInfo:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - MarketplaceSandbox
      summary: Информация об отправлении
      description: |
        Возвращает информацию об отправлении по его идентификатору.
      security:
        - Client Credentials: []
      operationId: ShipmentGetInfoSandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentInfoRequest'
        required: true
  /marketplace-sandbox/shipment/getList:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - MarketplaceSandbox
      summary: Список отправлений
      description: |
        Возвращает список отправлений за указанный период времени.

        Дополнительно можно отфильтровать отправления.

        Максимальное количество отправлений в ответе: 50
      security:
        - Client Credentials: []
      operationId: ShipmentGetListSandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentListReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentListRequest'
        required: false
  /marketplace-sandbox/shipment/confirm:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - MarketplaceSandbox
      summary: Подтвердить отправление
      description: |
        Выполнить подтверждение отправления продавцом.
      security:
        - Client Credentials: []
      operationId: ShipmentConfirmSandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentConfirmReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentConfirmRequest'
        required: true
  /marketplace-sandbox/shipment/reject:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - MarketplaceSandbox
      summary: Отменить отправление
      description: |
        Выполнить отмену отправления продавцом.
      security:
        - Client Credentials: []
      operationId: ShipmentRejectSandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRejectReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentRejectRequest'
        required: true
  /marketplace-sandbox/shipment/assemble:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - MarketplaceSandbox
      summary: Скомплектовать товар(-ы) для отправления
      description: |
        Выполнить комплектацию товара(-ов) для отправления продавцом
      security:
        - Client Credentials: []
      operationId: ShipmentAssembleSandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentAssembleReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentAssembleRequest'
        required: true
  /marketplace-sandbox/shipment/pickup:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - MarketplaceSandbox
      summary: Подтвердить отгрузку товара(-ов) на отправление
      description: |
        Подтвердить отгрузку товара(-ов) на отправление
      security:
        - Client Credentials: []
      operationId: ShipmentPickUpSandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentPickUpReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentPickUpRequest'
        required: true
  /marketplace-sandbox/shipment/createAcceptanceCert:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - MarketplaceSandbox
      summary: Получить PDF-файл акта приёма-передачи
      description: |
        Получить PDF-файл акта приёма-передачи
      security:
        - Client Credentials: []
      operationId: ShipmentCreateAcceptanceCert
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentCreateAcceptanceCertReply'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReply'
  '/realty/v1/accounts/{user_id}/items/{item_id}/prices':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathItemId'
    post:
      tags:
        - Realty
      operationId: postRealtyPrices
      summary: |
        Актуализация параметров для выбранных периодов
      description: >
        Обновляет параметры (цена за ночь, доплата за гостя, минимальная
        продолжительность брони) для

        каждого из переданных диапазонов дат
      security:
        - Authorization Code:
            - 'short_term_rent:write'
        - Client Credentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParamPricesRealty'
            example:
              prices:
                - date_from: '2018-06-02'
                  date_to: '2018-06-14'
                  minimal_duration: 1
                  extra_guest_fee: 500
                  night_price: 1500
                - date_from: '2018-06-15'
                  date_to: '2018-07-15'
                  minimal_duration: 7
                  extra_guest_fee: 1000
                  night_price: 5000
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: Результат обработки запроса
                    enum:
                      - success
                      - fail
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  '/realty/v1/accounts/{user_id}/items/{item_id}/bookings':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathItemId'
      - name: date_start
        in: query
        description: 'Фильтр, ограничивающий выборку по нижней границе дат'
        required: true
        schema:
          type: string
          format: date
          example: '2018-01-01'
      - name: date_end
        in: query
        description: 'Фильтр, ограничивающий выборку по верхней границе дат'
        required: true
        schema:
          type: string
          format: date
          example: '2018-05-01'
    get:
      tags:
        - Realty
      operationId: getRealtyBookings
      summary: |
        Получение списка броней по объявлению
      description: |
        Возвращает информацию о бронированиях объекта за весь период.
      security:
        - Authorization Code:
            - 'short_term_rent:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookings:
                    type: array
                    description: Список броней
                    items:
                      $ref: '#/components/schemas/RealtyBooking'
        default:
          description: Информация об ошибке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
  /job/v1/vacancies:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Job
      operationId: postVacancy
      summary: Публикация вакансии
      description: |
        Создает объявление в категории Вакансии
      security:
        - Authorization Code:
            - 'job:write'
        - Client Credentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyCreate'
            example:
              name: объявление
              description: описание
              allow_messages: true
              contacts:
                name: менеджер
                phone:
                  country: '+7'
                  city: '201'
                  number: '1001158'
              address: Москва
              business_area: 7
              schedule:
                id: flyInFlyOut
              experience:
                id: moreThan1
              billing_type: package
      responses:
        '201':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanctCreateResult'
          headers:
            Location:
              description: Заголовок будет содержать ссылку на добавленную вакансию.
              schema:
                type: string
        '400':
          title: Oшибка в поле вакансии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '402':
          title: Oшибка оплаты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentError'
        '403':
          description: Создание вакансий недоступно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationForbiddenError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v1/vacancies/{vacancy_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/pathVacancyId'
    put:
      tags:
        - Job
      operationId: putVacancy
      summary: Редактирование вакансии
      description: |
        Редактирует объявление в категории Вакансии
      security:
        - Authorization Code:
            - 'job:write'
        - Client Credentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyUpdate'
            example:
              name: объявление
              description: описание
              allow_messages: true
              contacts:
                name: менеджер
                phone:
                  country: '+7'
                  city: '201'
                  number: '1001158'
              address: Москва
              experience:
                id: moreThan1
              billing_type: package
      responses:
        '204':
          description: Успешный ответ
        '400':
          title: Oшибка в поле вакансии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '402':
          title: Oшибка оплаты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentError'
        '403':
          description: Редактирование вакансий недоступно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditingForbiddenError'
        '404':
          description: Редактируемая вакансия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemNotFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v1/vacancies/archived/{vacancy_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/pathVacancyId'
    put:
      tags:
        - Job
      operationId: putArchivedVacancy
      summary: Остановка публикации вакансии
      description: |
        Снимает с публикации объявление в категории Вакансии
      security:
        - Authorization Code:
            - 'job:write'
        - Client Credentials: []
      responses:
        '204':
          description: Успешный ответ
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '402':
          title: Oшибка оплаты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentError'
        '403':
          description: Остановка публикации вакансий недоступно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoppingForbiddenError'
        '404':
          description: Вакансия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemNotFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v1/vacancies/{vacancy_id}/prolongate':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/pathVacancyId'
    post:
      tags:
        - Job
      operationId: postProlongateVacancy
      summary: Реактивация вакансии
      description: |
        Реактивирует объявление в категории Вакансии
      security:
        - Authorization Code:
            - 'job:write'
        - Client Credentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyProlongate'
            example:
              billing_type: package
      responses:
        '204':
          description: Успешный ответ
        '400':
          title: Oшибка в поле вакансии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestShort'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '402':
          title: Oшибка оплаты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentError'
        '403':
          description: Активация вакансий недоступна
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationForbiddenError'
        '404':
          description: Вакансия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemNotFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  /job/v1/resumes/:
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: per_page
        in: query
        description: >-
          Количество записей на странице (положительное число больше 0 и меньше
          100)
        required: false
        schema:
          type: integer
          format: int32
          default: 25
          example: 50
      - name: page
        in: query
        description: Номер страницы (положительное число больше 0)
        required: false
        schema:
          type: integer
          format: int32
          default: 1
          example: 1
      - name: cursor
        in: query
        description: >-
          Курсор поиска (если не указан, будет начат новый поиск и его курсор
          будет возвращен в ответе)
        required: false
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: Поля ответа (можно указать несколько значений через запятую)
        required: false
        schema:
          type: string
          enum:
            - title
            - location
            - specialization
            - education_level
            - total_experience
            - gender
            - age
            - salary
            - is_purchased
            - created_at
            - updated_at
          example: 'title,specialization,total_experience,salary'
      - name: query
        in: query
        description: Поисковая фраза
        required: false
        schema:
          type: string
          example: оператор call-центра
      - name: location
        in: query
        description: >
          Идентификатор региона поиска (можно указать несколько значений через
          запятую)

          <br>

          Метод принимает идентификаторы сущностей Region и City из
          [справочника](http://autoload.avito.ru/format/Locations.xml).
        required: false
        schema:
          type: integer
          format: int64
          example: 637640
      - name: specialization
        in: query
        description: >
          Идентификатор сферы деятельности (можно указать несколько значений
          через запятую)

          <br>

          Возможные значения:

          - 10166 - IT, интернет, телеком

          - 10167 - Медицина, фармацевтика

          - 10168 - Продажи

          - 10169 - Страхование

          - 10170 - Транспорт, логистика

          - 10171 - Образование, наука

          - 10172 - Строительство

          - 10173 - Туризм, рестораны

          - 10174 - Фитнес, салоны красоты

          - 10175 - Без опыта, студенты

          - 10180 - Автомобильный бизнес

          - 10181 - Бухгалтерия, финансы

          - 10182 - Высший менеджмент

          - 10183 - Госслужба, НКО

          - 10184 - ЖКХ, эксплуатация

          - 10185 - Искусство, развлечения

          - 10186 - Консультирование

          - 10187 - Маркетинг, реклама, PR

          - 10188 - Охрана, безопасность

          - 10189 - Управление персоналом

          - 10190 - Юриспруденция

          - 10191 - Административная работа

          - 10192 - Банки, инвестиции

          - 10193 - Производство, сырьё, с/х

          - 16844 - Домашний персонал
        required: false
        schema:
          type: integer
          format: int64
          example: '10175,10186'
      - name: schedule
        in: query
        description: |
          График работы (можно указать несколько значений через запятую)
          <br>
          Возможные значения:
          - partial-day - Неполный рабочий день
          - full-day - Полный рабочий день
          - fly-in-fly-out - Вахтовый метод
          - flexible - Гибкий график
          - shift - Сменный график
          - remote - Удаленная работа
        required: false
        schema:
          type: string
          enum:
            - partial-day
            - full-day
            - fly-in-fly-out
            - flexible
            - shift
            - remote
          example: remote
      - name: business_trip_readiness
        in: query
        description: >
          Готовность к командировкам (можно указать несколько значений через
          запятую)

          <br>

          Возможные значения:

          - ready - Готов

          - never - Не готов

          - sometimes - Иногда
        required: false
        schema:
          type: string
          enum:
            - ready
            - never
            - sometimes
      - name: relocation_readiness
        in: query
        description: |
          Готовность к переезду (можно указать несколько значений через запятую)
          <br>
          Возможные значения:
          - possible - Возможен
          - never - Невозможен
        required: false
        schema:
          type: string
          enum:
            - possible
            - never
      - name: gender
        in: query
        description: |
          Пол (можно указать несколько значений через запятую)
          <br>
          Возможные значения:
          - female - Женщина
          - male - Мужчина
        required: false
        schema:
          type: string
          enum:
            - female
            - male
      - name: age_min
        in: query
        description: 'Минимальный возраст (включительно, положительное число от 18 до 99)'
        required: false
        schema:
          type: integer
          format: int32
          default: 18
      - name: age_max
        in: query
        description: 'Максимальный возраст (включительно, положительное число от 18 до 99)'
        required: false
        schema:
          type: integer
          format: int32
          default: 99
      - name: education_level
        in: query
        description: |
          Уровень образования (можно указать несколько значений через запятую)
          <br>
          Возможные значения:
          - higher - Высшее
          - unfinished-higher - Неоконченное высшее
          - secondary - Среднее
          - special-secondary - Среднее специальное
        required: false
        schema:
          type: string
          enum:
            - higher
            - unfinished-higher
            - secondary
            - special-secondary
          example: unfinished-higher
      - name: experience_min
        in: query
        description: 'Минимальный стаж работы (включительно, положительное число от 0 до 50)'
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: experience_max
        in: query
        description: >-
          Максимальный стаж работы (включительно, положительное число от 0 до
          50)
        required: false
        schema:
          type: integer
          format: int32
          default: 50
          example: 3
      - name: salary_min
        in: query
        description: >-
          Минимальный размер заработной платы (включительно, положительное
          число)
        required: false
        schema:
          type: integer
          format: int64
          default: 0
      - name: salary_max
        in: query
        description: >-
          Максимальный размер заработной платы (включительно, положительное
          число)
        required: false
        schema:
          type: integer
          format: int64
          example: 25000
      - name: updated_than
        in: query
        description: Дата последнего обновления
        required: false
        schema:
          type: string
          format: date-time
    get:
      tags:
        - Job
      operationId: getResumes
      summary: |
        Поиск резюме
      security:
        - Authorization Code:
            - 'job:cv'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                title: Список найденных резюме
                properties:
                  resumes:
                    type: array
                    title: Список резюме
                    items:
                      $ref: '#/components/schemas/SimplifiedResume'
                  meta:
                    $ref: '#/components/schemas/ResumeSearchMeta'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v1/resumes/{resume_id}/':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: resume_id
        in: path
        description: Идентификатор резюме
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: Поля ответа (можно указать несколько значений через запятую)
        required: false
        schema:
          type: string
          enum:
            - title
            - description
            - url
            - experience
            - education
            - language
            - location
            - photos
            - specialization
            - schedule
            - education_level
            - gender
            - total_experience
            - age
            - citizenship
            - business_trip_readiness
            - relocation_readiness
            - salary
            - is_purchased
            - created_at
            - updated_at
          example: 'title,specialization,total_experience,salary'
    get:
      deprecated: true
      tags:
        - Job
      operationId: getResume
      summary: |
        Просмотр резюме
      security:
        - Authorization Code:
            - 'job:cv'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '404':
          description: Резюме не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v2/resumes/{resume_id}/':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: resume_id
        in: path
        description: Идентификатор резюме
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: >-
          Поля основного тела ответа (можно указать несколько значений через
          запятую). По умолчанию отображаются все поля.
        required: false
        schema:
          type: string
          enum:
            - title
            - description
            - url
            - salary
            - is_purchased
            - start_time
            - update_time
            - is_active
          example: 'title,description,salary'
      - name: params
        in: query
        description: >-
          Дополнительные поля, которые входят в params (можно указать несколько
          значений через запятую). По умолчанию отображаются все поля.
        required: false
        schema:
          type: string
          enum:
            - ability_to_business_trip
            - address
            - age
            - business_area
            - education
            - education_list
            - experience
            - experience_list
            - language_list
            - moving
            - nationality
            - pol
            - razreshenie_na_rabotu_v_rossii
            - schedule
          example: 'address,age'
      - name: photos
        in: query
        description: 'Признак того, нужно ли отдавать картинки, по умолчанию false'
        required: false
        schema:
          default: false
          type: bool
          example: true
    get:
      tags:
        - Job
      operationId: getResume 2.0
      summary: |
        Просмотр резюме v2.0
      description: >
        По умолчанию fields и params выводятся все. Если указана только часть
        полей - остальные поля будут отсутствовать в ответе.
      security:
        - Authorization Code:
            - 'job:cv'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume2.0'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '404':
          description: Резюме не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v1/resumes/{resume_id}/contacts/':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: resume_id
        in: path
        description: Идентификатор резюме
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - Job
      operationId: getResumeContacts
      summary: |
        Доступ к контактным данным соискателя
      description: >
        Для получения контактов пользователя необходимо приобрести пакет
        просмотров

        контактных данных в [личном
        кабинете](https://www.avito.ru/account/cv_packages).
      security:
        - Authorization Code:
            - 'job:cv'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeContacts'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validatingError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '402':
          description: Требуется пополнение пакета просмотров резюме
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchasingError'
        '404':
          description: Резюме не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  /job/v1/negotiations:
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: per_page
        in: query
        description: Количество записей на странице (целое число больше 0 и меньше 21)
        required: false
        schema:
          type: integer
          format: int32
          default: 20
          example: 10
      - name: page
        in: query
        description: Номер страницы (целое число больше 0)
        required: false
        schema:
          type: integer
          format: int32
          default: 1
          example: 5
      - name: cursor
        in: query
        description: >-
          Курсор поиска, возвращается в ответе первого запроса и если не указан,
          то страница всегда начинается с первой
        required: false
        schema:
          type: integer
          format: int64
          example: 42122
      - name: vacancy_id
        in: query
        description: Идентификатор вакансии. Опциональный фильтр
        required: false
        schema:
          type: integer
          format: int64
          example: 2241333
      - name: resume_photos
        in: query
        description: 'признак того, нужно ли отдавать картинки резюме, по умолчанию false'
        required: false
        schema:
          default: false
          type: bool
          example: true
    get:
      tags:
        - Job
      operationId: getNegotiations
      summary: |
        Получение списка откликов
      description: |
        Возвращает постраничный список откликов с фильтрацией по вакансии
      security:
        - Authorization Code:
            - 'job:negotiations'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegotiationList'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v1/negotiations/{negotiation_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: negotiation_id
        in: path
        description: Идентификатор отклика
        required: true
        schema:
          type: integer
          format: int64
        example: 47774
      - name: resume_photos
        in: query
        description: 'признак того, нужно ли отдавать картинки резюме, по умолчанию false'
        required: false
        schema:
          default: false
          type: bool
          example: true
    get:
      tags:
        - Job
      operationId: getNegotiationsByID
      summary: |
        Получение отклика по его идентификатору
      description: |
        Возвращает информацию об отклике
      security:
        - Authorization Code:
            - 'job:negotiations'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Negotiation'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '403':
          description: У пользователя нет доступа к отклику
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenError'
        '404':
          description: Отклик не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/job/v1/negotiations/by-chat-id/{chat_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - name: chat_id
        in: path
        description: Идентификатор чата
        required: true
        schema:
          type: string
          example: u2i-2142059193-600277161
    get:
      tags:
        - Job
      operationId: getNegotiationsByChatID
      summary: |
        Получение отклика по идентификатору чата
      description: >
        Возвращает информацию об отклике. Отклики создаются после создания чата
        и поэтому в ответе метода появляются не сразу (до 30 секунд)
      security:
        - Authorization Code:
            - 'job:negotiations'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Negotiation'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '403':
          description: У пользователя нет доступа к отклику
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenError'
        '404':
          description: Отклик не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  /messenger/v1/webhook:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Messenger
      operationId: postWebhook
      summary: Включение уведомлений (webhooks)
      description: |
        Включение уведомлений
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      requestBody:
        description: Url на который будут отправляться уведомления
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookSubscribeRequestBody'
      responses:
        '200':
          x-examples:
            application/json:
              ok: true
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
      x-code-samples:
        - lang: PHP
          source: "$ch = curl_init(\"https://api.avito.ru/messenger/v1/webhook\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, [\n\t\"Content-Type: application/json\",\n\t\"Authorization: Bearer <TOKEN>\",\n]);\ncurl_setopt($ch, CURLOPT_POST, true);\n\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode([\n\t\"url\" => \"https://test.test\",\n], JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES));\n\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n$result = curl_exec($ch);\ncurl_close($ch);"
  /messenger/v2/webhook:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Messenger
      operationId: postWebhookV2
      summary: Включение уведомлений V2 (webhooks)
      description: |
        Включение **V2** уведомлений. <LINK_TO_V2_WEBHOOKS>
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      requestBody:
        description: Url на который будут отправляться уведомления
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookSubscribeRequestBody'
      responses:
        '200':
          x-examples:
            application/json:
              ok: true
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
      x-code-samples:
        - lang: PHP
          source: "$ch = curl_init(\"https://api.avito.ru/messenger/v2/webhook\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, [\n\t\"Content-Type: application/json\",\n\t\"Authorization: Bearer <TOKEN>\",\n]);\ncurl_setopt($ch, CURLOPT_POST, true);\n\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode([\n\t\"url\" => \"https://test.test\",\n], JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES));\n\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n$result = curl_exec($ch);\ncurl_close($ch);"
  /messenger/v1/webhook/unsubscribe:
    parameters:
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Messenger
      operationId: postWebhookUnsubscribe
      summary: Отключение уведомлений (webhooks)
      description: |
        Отключение уведомлений
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      requestBody:
        description: 'Url, на который необходимо перестать слать уведомления'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookSubscribeRequestBody'
      responses:
        '200':
          x-examples:
            application/json:
              ok: true
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
      x-code-samples:
        - lang: PHP
          source: "$ch = curl_init(\"https://api.avito.ru/messenger/v1/webhook/unsubscribe\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, [\n\t\"Content-Type: application/json\",\n\t\"Authorization: Bearer <TOKEN>\",\n]);\ncurl_setopt($ch, CURLOPT_POST, true);\n\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode([\n\t\"url\" => \"https://test.test\",\n], JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES));\n\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n$result = curl_exec($ch);\ncurl_close($ch);"
  '/messenger/v1/accounts/{user_id}/blacklist':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
    post:
      tags:
        - Messenger
      operationId: postBlacklist
      summary: Добавление пользователя в blacklist
      description: |
        Добавление пользователя в blacklist
      security:
        - Authorization Code:
            - 'messenger:write'
        - Client Credentials: []
      requestBody:
        description: Добавление пользователя в blacklist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addBlacklistRequestBody'
  '/messenger/v1/accounts/{user_id}/chats/{chat_id}/messages/':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/chatId'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      tags:
        - Messenger
      operationId: getMessages
      summary: Получение списка сообщений
      description: >
        Получение списка сообщений, используйте только для изначальной загрузки
        сообщений на экране, для получения новых сообщений в реальном времени
        используйте webhooks
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
  '/messenger/v2/accounts/{user_id}/chats/{chat_id}/messages/':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/chatId'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      tags:
        - Messenger
      operationId: getMessagesV2
      summary: Получение списка сообщений V2
      description: >
        Получение списка сообщений.  **Не помечает чат прочитанным**

        После успешного списка сообщений необходимо вызвать
        [метод](https://api.avito.ru/docs/api.html#operation/chatRead), который
        сделат чат прочитанным.
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
  '/messenger/v1/accounts/{user_id}/chats/{chat_id}/messages':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/chatId'
    post:
      tags:
        - Messenger
      operationId: postSendMessage
      summary: Отправление сообщения
      description: |
        На данный момент можно отправить только текстовое сообщение
      security:
        - Authorization Code:
            - 'messenger:write'
        - Client Credentials: []
      requestBody:
        description: Отправление сообщения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendMessageRequestBody'
      responses:
        '200':
          x-examples:
            application/json:
              id: bdcc5bac2d00345f1cc66fa657813958
              created: 1563202313
              content:
                text: привет!
              type: text
              direction: in
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: bdcc5bac2d00345f1cc66fa657813958
                  created:
                    type: integer
                    example: 1563202313
                  content:
                    type: object
                    properties:
                      text:
                        type: string
                        example: привет
                  type:
                    type: string
                    example: text
                  direction:
                    type: string
                    example: out
  '/messenger/v1/accounts/{user_id}/chats/{chat_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/chatId'
    get:
      tags:
        - Messenger
      operationId: getChatById
      summary: Получение информации по чату
      description: |
        Возвращает данные чата и последнее сообщение в нем
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
  '/messenger/v1/accounts/{user_id}/chats':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/itemIds'
      - $ref: '#/components/parameters/unreadOnly'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      tags:
        - Messenger
      operationId: getChats
      summary: Получение информации по чатам
      description: |
        Возвращает список чатов
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chats'
  '/messenger/v1/accounts/{user_id}/chats/{chat_id}/read':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/chatId'
    post:
      tags:
        - Messenger
      operationId: chatRead
      summary: Прочитать чат
      description: >
        После успешного получения списка сообщений необходимо вызвать этот метод
        для того, чтобы чат стал прочитанным.
      security:
        - Authorization Code:
            - 'messenger:read'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
  '/messenger/v1/accounts/{user_id}/chats/{chat_id}/messages/{message_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/chatId'
      - $ref: '#/components/parameters/messageId'
    post:
      tags:
        - Messenger
      operationId: deleteMessage
      summary: Удаление сообщения
      description: >
        Сообщение не пропадает из истории, а меняет свой тип на deleted.

        Удалять можно только те сообщения которые не старше часа с момента их
        создания.
      security:
        - Authorization Code:
            - 'messenger:write'
        - Client Credentials: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
  '/cpa/v1/call/{call_id}':
    parameters:
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/sourceHeader'
      - name: call_id
        in: path
        description: Идентификатор звонка
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - Cpa
      operationId: getCall
      summary: Запись звонка
      description: Получение записи звонка по идентификатору
      security:
        - Client Credentials: []
      responses:
        '200':
          '404':
            description: Звонок не найден
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notFoundError'
          '500':
            description: Внутренняя ошибка метода API
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/serviceError'
          description: Успешный ответ
          headers:
            Content-Type:
              description: >-
                Заголовок будет содержать тип возвращаемого контента
                (audio/mpeg)
              schema:
                type: string
            Content-Length:
              description: Заголовок содержит размер объекта
              schema:
                type: string
  '/stats/v1/accounts/{user_id}/items':
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/authHeader'
    post:
      tags:
        - Item
      operationId: itemStatsShallow
      summary: Получение статистики по списку объявлений
      description: >
        Получение счетчиков по переданному списку объявлений пользователя.


        **Внимание:** в запросе может быть передано не более 200 идентификаторов
        объявлений.


        **Внимание:** глубина такого запроса ограничена 270 днями.


        ### Счетчики

        * views - общее число просмотров объявления;

        * uniqViews - число уникальных пользователей, просмотревших объявление;

        * contacts - число [контактов] [1];

        * uniqContacts - число уникальных пользователей, совершивших [контакты]
        [1];

        * favorites - число добавлений объявления в "избранное";

        * uniqFavorites - число уникальных пользователей, добавивших объявление
        в "избранное".


        ### Группировка счетчиков

        Счетчики могут быть сгруппированы [2] по:

        * дням;

        * неделям - в поле `date` соответствующей структуры будет первый день
        недели;

        * месяцам - в поле `date` соответствующей структуры будет первый день
        месяца.


        #### Период группировки

        Период группировки передается в теле запроса в поле `group_by`.
        Доступные значения этого поля:

        * "day" (по умолчанию) - без группировки;

        * "week" - суммирование счетчиков за неделю;

        * "month" - суммирование счетчиков за месяц.


        ### Примечания

        * [1]: Под контактом понимаются: запросы телефона продавца, начатый чат
        с продавцом по конкретному объявлению, отклик на резюме и пр.

        * [2]: Группировка уникальных пользователей происходит только в рамках
        одного дня.
      security:
        - Authorization Code:
            - 'stats:read'
        - Client Credentials: []
      requestBody:
        description: Набор параметров в теле запроса.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatisticsShallowRequestBody'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponseNew'
              example:
                items:
                  - itemId: <item_id_1>
                    stats:
                      - date: '2020-06-11'
                        uniqViews: 10
                        uniqContacts: 1
                      - date: '2020-06-12'
                        uniqViews: 7
                        uniqContacts: 0
                  - itemId: <item_id_2>
                    stats:
                      - date: '2020-06-11'
                        uniqViews: 21
                        uniqContacts: 4
                      - date: '2020-06-12'
                        uniqViews: 18
                        uniqContacts: 1
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '404':
          description: Неверный user_id в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
  '/stats/v1/accounts/{user_id}/items/{item_id}/':
    parameters:
      - $ref: '#/components/parameters/userId'
      - $ref: '#/components/parameters/authHeader'
      - $ref: '#/components/parameters/pathItemId'
    post:
      tags:
        - Item
      deprecated: true
      operationId: itemStatsDeep
      summary: Получение статистики по одному объявлению
      description: >
        Получение счетчиков по одному объявлению пользователя.


        **Внимание:** глубина такого запроса ограничена 540 днями.


        **Внимание:** это deprecated method, который будет выключен 1 января
        2021 года.


        ### Счетчики

        * views - общее число просмотров объявления;

        * uniqViews - число уникальных пользователей, просмотревших объявление;

        * contacts - число [контактов] [1];

        * uniqContacts - число уникальных пользователей, совершивших [контакты]
        [1];

        * favorites - число добавлений объявления в "избранное";

        * uniqFavorites - число уникальных пользователей, добавивших объявление
        в "избранное".


        ### Группировка счетчиков

        Счетчики могут быть сгруппированы [2] по:

        * дням;

        * неделям - в поле `date` соответствующей структуры будет первый день
        недели;

        * месяцам - в поле `date` соответствующей структуры будет первый день
        месяца.


        #### Период группировки

        Период группировки передается в теле запроса в поле `group_by`.
        Доступные значения этого поля:

        * "day" (по умолчанию) - без группировки;

        * "week" - суммирование счетчиков за неделю;

        * "month" - суммирование счетчиков за месяц.


        ### Примечания

        * [1]: Под контактом понимаются: запросы телефона продавца, начатый чат
        с продавцом по конкретному объявлению, отклик на резюме и пр.

        * [2]: Группировка уникальных пользователей происходит только в рамках
        одного дня.
      security:
        - Authorization Code:
            - 'stats:read'
        - Client Credentials: []
      requestBody:
        description: Набор параметров в теле запроса.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatisticsDeepRequestBody'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
              example:
                items:
                  - itemId: <item_id>
                    stats:
                      - date: '2020-06-11'
                        uniqViews: 10
                        uniqContacts: 1
                      - date: '2020-06-12'
                        uniqViews: 7
                        uniqContacts: 0
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authError'
        '404':
          description: Неверный user_id в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundError'
        '500':
          description: Внутренняя ошибка метода API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceError'
        '503':
          description: Метод API временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceUnavailableError'
components:
  securitySchemes:
    Client Credentials:
      type: oauth2
      description: >-
        Это API использует OAuth 2 с механизмом client_credentials. Используйте
        его для доступа к возможностям своей личной учетной записи.
        [Подробнее](#tag/Access)
      flows:
        clientCredentials:
          tokenUrl: 'https://api.avito.ru/token'
          scopes: {}
    Authorization Code:
      type: oauth2
      description: >-
        Это API использует OAuth 2 с механизмом authorization_code. Используйте
        его для доступа к данным других пользователей при разработке стороннего
        приложения. [Подробнее](#tag/ApplicationAccess)
      flows:
        authorizationCode:
          authorizationUrl: 'https://avito.ru/oauth'
          tokenUrl: 'https://api.avito.ru/token'
          scopes:
            'messenger:read': Чтение сообщений в мессенджере Авито
            'messenger:write': Модифицирование сообщений в мессенджере Авито
            'user_balance:read': Получение баланса пользователя
            'job:write': Изменение объявлений вертикали Работа
            'job:cv': Получение информации резюме
            'job:negotiations': Получение информации об откликах на вакансии
            'user_operations:read': Получение истории операций пользователя
            'user:read': Получение информации о пользователе
            'autoload:reports': Получение отчетов Автозагрузки
            'items:info': Получение информации об объявлениях
            'items:apply_vas': Применение дополнительных услуг
            'short_term_rent:read': Получение информации об объявлениях краткосрочной аренды
            'short_term_rent:write': Изменение объявлений краткосрочной аренды
            'autoteka:reports': Получение и создание отчетов Автотеки
            'autoteka:previews': Получение и создание превью Автотеки
            'autoteka:vin': Получение vin по идентификатору объявления
            'stats:read': Получение статистики объявлений
  parameters:
    perPage:
      name: per_page
      in: query
      description: Количество ресурсов на страницу
      required: false
      schema:
        type: integer
        format: int32
    page:
      name: page
      in: query
      description: Номер страницы
      required: false
      schema:
        type: integer
        format: int32
    authHeader:
      name: Authorization
      in: header
      schema:
        type: string
        example: Bearer ACCESS_TOKEN
      required: true
      description: Токен для авторизации
    pathUserId:
      name: user_id
      in: path
      description: Номер пользователя в Личном кабинете Авито
      required: true
      schema:
        type: integer
        format: int64
    pathItemId:
      name: item_id
      in: path
      description: Идентификатор объявления на сайте
      required: true
      schema:
        type: integer
        format: int64
    pathVacancyId:
      name: vacancy_id
      in: path
      description: Идентификатор вакансии на сайте
      required: true
      schema:
        type: integer
        format: int64
    userId:
      name: user_id
      in: path
      description: Идентификатор пользователя (клиента)
      required: true
      schema:
        type: integer
        format: int64
    chatId:
      name: chat_id
      in: path
      description: Идентификатор чата (клиента)
      required: true
      schema:
        type: string
    messageId:
      name: message_id
      in: path
      description: Идентификатор сообщения
      required: true
      schema:
        type: string
    itemIds:
      name: item_ids
      in: query
      required: false
      schema:
        type: string
        example: '12345,6789'
    unreadOnly:
      name: unread_only
      in: query
      required: false
      schema:
        type: boolean
        example: true
    limit:
      name: limit
      in: query
      description: >-
        Количество сообщений на странице (положительное число больше 0 и меньше
        100)
      required: false
      schema:
        type: integer
        format: int32
        default: 100
        example: 50
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 0
        example: 50
    sourceHeader:
      name: X-Source
      in: header
      type: string
      required: true
      example: someName
      description: 'Имя сервиса, отправляющего запрос'
  schemas:
    ItemInfoErrorAutoload:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Идентификатор события
        title:
          type: string
          description: Заголовок
        description:
          type: string
          description: Описание
        manual:
          type: string
          description: Ссылка на документацию
          nullable: true
    InfoVas:
      type: object
      properties:
        vas_id:
          type: string
          description: Идентификатор услуги
          enum:
            - vip
            - highlight
            - pushup
            - premium
            - xl
        finish_time:
          type: string
          format: date-time
          nullable: true
          description: Дата завершения услуги
        schedule:
          type: array
          nullable: true
          description: Информация о следующих применениях услуги
          items:
            type: string
            format: date-time
            description: Дата следующего применения услуги
    PackageInfoVas:
      type: object
      properties:
        package_id:
          type: string
          description: Идентификатор услуги
          enum:
            - turbo_sale
            - quick_sale
        start_time:
          type: string
          format: date-time
          nullable: true
          description: Дата применения услуги
        finish_time:
          type: string
          format: date-time
          nullable: true
          description: Дата завершения услуги
        name:
          type: string
          description: Русскоязычное название услуги
    ShortStatInfo:
      type: object
      description: Информация по просмотрам объявления
      properties:
        item_views:
          type: integer
          format: int32
          description: Кол-во просмотров объявления на текущий момент
        contact_views:
          type: integer
          format: int32
          description: Кол-во просмотров контактов объявления на текущий момент
    FieldError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          description: Код ошибки
          type: string
        message:
          description: Описание ошибки
          type: string
    ItemInfoAutoload:
      type: object
      properties:
        avito_id:
          description: Идентификатор объявления на сайте
          type: integer
          format: int32
          nullable: true
        url:
          description: URL объявления на сайте
          type: string
          nullable: true
        status:
          description: |
            Статус выгрузки объявления:<br />
            `success` - Успешно опубликовано<br />
            `problem` - Опубликовано с проблемами<br />
            `error` - Не удалось опубликовать<br />
            `not_publish` - Не нужно публиковать<br />
            `will_publish_later` - Будут опубликованы позднее<br />
            `duplicate` - Дубликат объявления<br />
            `without_id` - Объявление без идентификатора<br />
            `deleted` - Удалено из файла<br />
            `unknown` - Возникли проблемы при определении статуса
          type: string
          enum:
            - success
            - problem
            - error
            - not_publish
            - will_publish_later
            - duplicate
            - without_id
            - deleted
            - unknown
        status_detail:
          description: >
            Подробный статус выгрузки объявления:

            <br />`success_added` - Объявление добавленно на сайт в последний
            цикл автозагрузки

            <br />`success_activated` - Объявление активировано из ранее снятых
            с публикации или завершенных

            <br />`success_activated_updated` - Объявление активировано из ранее
            снятых с публикации или завершенных и изменено

            <br />`success_updated` - Объявление было изменено

            <br />`success_skipped` - Объявление в данный цикл автозагрузки без
            изменений оставлено активным на сайте

            <br />`problem_obsolete` - Объявление в XML имеет устаревший формат.
            [Документация по формату](http://autoload.avito.ru/format/)

            <br />`problem_params_critical` - При обработке объявления возникли
            ошибки, связанные с описанием или значениями параметров. Если ошибки
            не исправить, то через какое-то время объявление исчезнет с сайта

            <br />`problem_params` - При обработке объявления возникли ошибки,
            связанные с описанием или значениями параметров

            <br />`problem_phone` - Проблемы с телефонным номером в контактной
            информации

            <br />`problem_images` - При обработке возникли ошибки размещения
            фотографий

            <br />`problem_vas` - При обработке возникли ошибки активации
            дополнительных услуг

            <br />`problem_other` - Возникли ошибки, отличные от перечисленных

            <br />`problem_several` - Возникло несколько разных ошибок,
            перечисленных выше

            <br />`error_fee` - Объявление не опубликовано на сайте из-за
            проблем с оплатой размещения

            <br />`error_params` - Не удалось опубликовать на сайте из-за
            ошибок, связанных с описанием или значениями параметров

            <br />`error_phone` - Не удалось опубликовать из-за проблем с
            телефонным номером в контактной информации

            <br />`error_rejected` - Объявление было отклонено модерацией из-за
            нарушений правил сайта

            <br />`error_blocked` - Объявление было заблокировано модерацией
            из-за нарушений правил сайта

            <br />`error_deleted` - Объявление невозможно обработать из-за того,
            что ранее объявления с таким ID (в XML-файле) было удалено с сайта

            <br />`error_other` - Возникли ошибки, отличные от перечисленных

            <br />`error_several` - Возникло несколько разных ошибок,
            перечисленных выше

            <br />`stopped_end_date_complete` - Не опубликовано или снято с
            публикации по причине истечения срока экспозиции, указанного в
            XML-файле

            <br />`stopped_end_date_error` - При попытке снятия с публикации
            возникли ошибки

            <br />`date_in_future` - Не опубликовано или снято с публикации по
            причине, что дата начала экспозиции, указанная в XML-файле, еще не
            наступила

            <br />`publish_later` - Не добавлено на сайт из-за ограничения на
            количество публикуемых за один цикл объявлений. Если вы хотите
            изменить режим автозагрузки ваших объявлений, обратитесь в Службу
            поддержки

            <br />`linker` - Объявления, похожие на размещенные ранее через
            Личный кабинет, по которым требуется принять решение: объединить с
            существующим или опубликовать как новое объявление

            <br />`removed_complete` - Объявление снято с публикации
            (завершенные), т.к. они были удалены из XML-файла

            <br />`removed_error` - Ошибки при попытке снятия с публикации

            <br />`need_sync` - Объявление ожидает синхронизации с сайтом

            <br />`duplicate` - Объявления имеют одинаковое описание

            <br />`without_id` - Объявление без идентификатора
          type: string
          enum:
            - success_added
            - success_activated
            - success_activated_updated
            - success_updated
            - success_skipped
            - problem_obsolete
            - problem_params_critical
            - problem_params
            - problem_phone
            - problem_images
            - problem_vas
            - problem_other
            - problem_several
            - error_fee
            - error_params
            - error_phone
            - error_rejected
            - error_blocked
            - error_deleted
            - error_other
            - error_several
            - stopped_end_date_complete
            - stopped_end_date_error
            - date_in_future
            - publish_later
            - linker
            - removed_complete
            - removed_error
            - need_sync
            - duplicate
            - without_id
        warnings:
          type: array
          description: >-
            Ошибки, которые, в подавляющем большинстве случаев, информируют, но
            не требуют вмешательства (никак не влияют на статус обработки)
          items:
            $ref: '#/components/schemas/ItemInfoErrorAutoload'
        errors:
          type: array
          description: >-
            Ошибки, при возникновении которых публикация новых не происходит,
            уже опубликованные — остаются без изменений, VAS-услуги не
            применяются, завершенные — не реактивируются
          items:
            $ref: '#/components/schemas/ItemInfoErrorAutoload'
        alarm:
          type: array
          description: >-
            Ошибки, при которых публикация/обновление происходит, но при этом с
            объявлением есть проблема, которая требует вмешательства
            пользователя; публикация изменений, по-возможности, происходит
          items:
            $ref: '#/components/schemas/ItemInfoErrorAutoload'
        fee_info:
          type: object
          nullable: true
          description: Информация о платном размещении
          properties:
            type:
              type: string
              description: Тип платного размещения
              enum:
                - single
                - package
            package_id:
              description: >-
                Идентификатор пакета размещения (отсутствует при разовом
                размещении)
              type: integer
              format: int32
            amount:
              description: >-
                Сумма списания за размещение (отсутствует при размещении из
                пакета)
              type: number
              format: float
        applied_vas:
          type: array
          description: >
            Список примененных при выгрузке дополнительных услуг

            - `premium` —
            [премиум-объявление](https://support.avito.ru/articles/200026868)

            - `vip` —
            [VIP-объявление](https://support.avito.ru/articles/200026848)

            - `pushup` — [поднятие объявления в
            поиске](https://support.avito.ru/articles/200026828)

            - `highlight` — [выделение
            объявления](https://support.avito.ru/articles/200026858)

            - `turbo_sale` - применение пакета
            [Турбо-продажа](https://support.avito.ru/articles/200026838)

            - `quick_sale` - применение пакета [Быстрая
            продажа](https://support.avito.ru/articles/200026838)
          items:
            type: string
            description: Идентификатор услуги
            enum:
              - vip
              - highlight
              - pushup
              - premium
              - turbo_sale
              - quick_sale
        processing_time:
          type: string
          format: date-time
          description: Дата последнего цикла обработки
        event_time:
          type: string
          format: date-time
          description: Дата последнего изменения состояния (статуса) выгрузки объявления
    ErrorItemsVas:
      type: array
      description: >-
        Список идентификаторов, которые не удалось обработать по разным причинам
        (например, они не принадлежат текущему пользователю)
      items:
        type: integer
    itemIdsRequestBody:
      type: object
      required:
        - item_ids
      properties:
        item_ids:
          type: array
          description: Набор идентификаторов объявлений на сайте
          items:
            type: integer
    vasIdRequestBody:
      type: object
      required:
        - vas_id
      properties:
        vas_id:
          type: string
          description: >
            Идентификатор услуги, возможные его варианты значения:

            - `highlight` — [выделение
            объявления](https://support.avito.ru/articles/200026858)

            - `xl` – [XL-объявление](https://support.avito.ru/articles/685)
          enum:
            - highlight
            - xl
    packageIdRequestBody:
      type: object
      required:
        - package_id
      properties:
        package_id:
          type: string
          description: >
            Идентификатор пакета услуг, возможные варианты значения:

            - `turbo_sale` - применение пакета
            [Турбопродажа](https://support.avito.ru/articles/200026838)

            - `quick_sale` - применение пакета [Быстрая
            продажа](https://support.avito.ru/articles/679)
          enum:
            - turbo_sale
            - quick_sale
    packageIdRequestBodyV2:
      type: object
      required:
        - package_id
      properties:
        package_id:
          type: string
          description: |
            Идентификатор пакета услуг, возможные варианты значения:
            - `x2_1` - применение пакета До 2 раз больше просмотров на 1 день
            - `x2_7` - применение пакета До 2 раз больше просмотров на 7 дней
            - `x5_1` - применение пакета До 5 раз больше просмотров на 1 день
            - `x5_7` - применение пакета До 5 раз больше просмотров на 7 дней
            - `x10_1` - применение пакета До 10 раз больше просмотров на 1 день
            - `x10_7` - применение пакета До 10 раз больше просмотров на 7 дней
          enum:
            - x2_1
            - x2_7
            - x5_1
            - x5_7
            - x10_1
            - x10_7
    PriceInfoVas:
      type: object
      description: Информация о дополнительных услугах для переданного списка объявлений
      properties:
        premium:
          type: number
          description: Стоимость услуги "Премиум"
        vip:
          type: number
          description: Стоимость услуги "VIP"
        pushup:
          type: number
          description: Стоимость услуги "Поднять"
        highlight:
          type: number
          description: Стоимость услуги "Выделить"
        xl:
          type: number
          description: Стоимость услуги "XL-объявление"
    PackagePriceInfoVas:
      type: object
      description: >-
        Информация о пакетах дополнительных услуг для переданного списка
        объявлений
      properties:
        quick_sale:
          type: number
          description: Стоимость пакета услуг "Быстрая продажа"
        turbo_sale:
          type: number
          description: Стоимость пакета услуг "Турбо-продажа"
        x2_1:
          type: number
          description: Стоимость пакета "До 2 раз больше просмотров на 1 день"
        x2_7:
          type: number
          description: Стоимость пакета "До 2 раз больше просмотров на 7 дней"
        x5_1:
          type: number
          description: Стоимость пакета "До 5 раз больше просмотров на 1 день"
        x5_7:
          type: number
          description: Стоимость пакета "До 5 раз больше просмотров на 7 дней"
        x10_1:
          type: number
          description: Стоимость пакета "До 10 раз больше просмотров на 1 день"
        x10_7:
          type: number
          description: Стоимость пакета "До 10 раз больше просмотров на 7 дней"
    VasApplyAvito:
      type: object
      properties:
        amount:
          type: number
          format: float
          description: Сумма списания за применение услуги
        vas:
          $ref: '#/components/schemas/InfoVas'
    VasAmountAvito:
      type: object
      properties:
        amount:
          type: number
          format: float
          description: Сумма списания за применение услуги или пакета
    CallsStatsRequest:
      type: object
      required:
        - dateFrom
        - dateTo
      properties:
        dateFrom:
          type: string
          description: Начальная дата периода (YYYY-MM-DD)
        dateTo:
          type: string
          description: Конечная дата периода (YYYY-MM-DD)
        item_ids:
          type: array
          description: Идентификаторы объявлений
          items:
            type: integer
    CallsStatsResponse:
      type: object
      required:
        - items
      properties:
        result:
          type: object
          properties:
            items:
              type: array
              description: Массив статистики по объявлениям
              items:
                $ref: '#/components/schemas/CallsStatsItem'
    CallsStatsItem:
      type: object
      required:
        - employeeId
        - itemId
      properties:
        employeeId:
          type: integer
          description: Идентификатор сотрудника в сервисе иерархии аккаунтов
        itemId:
          type: integer
          description: Идентификатор объявления
        days:
          type: array
          description: Массив статистики звонков объявления в разрезе дней
          items:
            $ref: '#/components/schemas/CallsStatsDay'
    CallsStatsDay:
      type: object
      required:
        - employeeId
        - itemId
      properties:
        date:
          type: string
          description: Дата (YYYY-MM-DD)
        calls:
          type: integer
          description: Звонки всего
        answered:
          type: integer
          description: Отвеченные звонки
        new:
          type: integer
          description: Новые звонки
        newAnswered:
          type: integer
          description: Новые и одновременно отвеченные звонки
    ItemInfoAvito:
      type: object
      properties:
        status:
          type: string
          enum:
            - active
            - removed
            - old
            - blocked
            - rejected
            - not_found
            - another_user
          description: Статус объявления на сайте
        start_time:
          type: string
          format: date-time
          nullable: true
          description: Дата создания объявления
        finish_time:
          type: string
          format: date-time
          nullable: true
          description: Дата завершения объявления
        url:
          type: string
          nullable: true
          description: URL-адрес объявления
        vas:
          description: Список примененных платных услуг
          type: array
          items:
            $ref: '#/components/schemas/InfoVas'
          nullable: true
        stats:
          $ref: '#/components/schemas/ShortStatInfo'
    ItemsInfoWithCategoryAvito:
      type: object
      properties:
        resources:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: Идентификатор объявления
                example: 24122231
              title:
                type: string
                description: Наименование объявления
                example: Продавец-кассир
              price:
                type: integer
                format: int32
                description: 'Цена объявления (null значение означает, что цена не указана)'
                nullable: true
                example: 35000
              category:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    description: Идентификатор категории
                    example: 111
                  name:
                    type: string
                    description: Наименование категории
                    example: Вакансии
              status:
                type: string
                enum:
                  - active
                  - removed
                  - old
                  - blocked
                  - rejected
                description: Статус объявления на сайте
              url:
                type: string
                nullable: true
                description: URL-адрес объявления
                example: >-
                  https://www.avito.ru/rostov-na-donu/vakansii/prodavets_magazina_2142
        meta:
          type: object
          properties:
            page:
              type: integer
              description: Номер страницы
              example: 1
            per_page:
              type: integer
              description: Количество записей на странице
              example: 25
    ItemsInfoAvito:
      type: object
      description: Информация по просмотрам объявления
      properties:
        item_views:
          type: integer
          format: int32
          description: Кол-во просмотров объявления на текущий момент
        contact_views:
          type: integer
          format: int32
          description: Кол-во просмотров контактов объявления на текущий момент
    MetaAutoload:
      type: object
      properties:
        per_page:
          description: Количество ресурсов на страницу
          type: integer
          format: int32
        page:
          description: Количество ресурсов на страницу
          type: integer
          format: int32
        pages:
          description: Количество страниц
          type: integer
          format: int32
    ReportCollectionAutoload:
      description: Список отчетов
      type: array
      items:
        type: object
        required:
          - id
          - started_at
          - finished_at
          - status
        properties:
          id:
            description: ID отчета
            type: integer
          started_at:
            type: string
            format: date-time
            description: Время создания отчета
          finished_at:
            type: string
            format: date-time
            description: Время окончания выгрузки объявлений на сайт
          import_success:
            description: Успешно ли прошел импорт файла
            type: boolean
          export_success:
            description: Успешно ли прошла выгрузка объявления на сайте
            type: boolean
          status:
            description: Статус обработки отчета на русском языке
            type: string
          report_status:
            description: Сокращенный статус обработки отчета
            type: string
          stat:
            description: Суммарная статистика по объявлению в данном отчете
            type: object
            properties:
              vas:
                description: К скольким объявлениям применены VAS-услуги
                type: integer
              success:
                description: Сколько успешно опубликовано на сайте
                type: integer
              error_fee:
                description: Сколько не опубликовано из-за отсуствия средств
                type: integer
              error:
                description: Сколько не опубликовано из-за ошибок
                type: integer
              unknown:
                description: Неизвестный статус обработки
                type: integer
              stopped:
                description: Сколько остановлено
                type: integer
              published:
                description: Сколько опубликовано на сайте
                type: integer
              fees:
                description: Сколько платных
                type: integer
              total:
                description: Всего объявлений в пакете
                type: integer
              problem:
                description: Сколько с незначительными проблемами
                type: integer
              problem_obsolete:
                description: Сколько в устаревшем формате или с устаревшими элементами
                type: integer
              duplicate:
                description: Сколько с одинаковым описанием
                type: integer
              publish_later:
                description: Сколько будут опубликованы позже
                type: integer
    ReportAutoload:
      type: object
      required:
        - id
        - ads
        - finished_at
        - started_at
        - status
        - customer_name
        - generated_at
        - version
      properties:
        ads:
          type: array
          description: Список объявлений
          items:
            type: object
            properties:
              ad_id:
                description: ID объявления в исходном XML-файле клиента
                type: string
              avito_date_end:
                type: string
                format: date-time
                description: Дата окончания публикации объявления
              avito_id:
                description: ID опубликованного объявления в Авито
                type: string
              statuses:
                description: Статусы обработки объявления
                properties:
                  avito:
                    description: Статус размещения на сайте
                    properties:
                      help:
                        type: string
                      value:
                        type: string
                    type: object
                  general:
                    description: Общий статус обработки объявления
                    properties:
                      help:
                        type: string
                      value:
                        type: string
                    type: object
                  processing:
                    description: Статус предварительной обработки
                    properties:
                      help:
                        type: string
                      value:
                        type: string
                    type: object
                type: object
              url:
                description: URL-адрес объявления на сайте Авито
                type: string
              messages:
                description: Сообщения о событиях возникших в процессе работы с объявлением
                type: object
                properties:
                  element_name:
                    type: string
                    description: Название элемента в XML по которому выводится сообшение
                    nullable: true
                  help_url:
                    type: string
                    description: URL-адрес документации по данному элементу
                  code:
                    type: integer
                    format: int32
                    description: >-
                      Условный код сообщения об ошибке для однозначной
                      идентификации сообщения
                  description:
                    type: string
                    description: Текстовое описание проблемы и возможных способов решения
                    nullable: true
                  type:
                    type: string
                    description: 'Тип собщения: warning, alarm, error'
        finished_at:
          type: string
          format: date-time
          description: Время окончания выгрузки объявлений на сайт
        started_at:
          type: string
          format: date-time
          description: Время создания отчета
        customer_name:
          description: Название организации
          type: string
        fee_packages:
          description: Использованные при публикации пакеты размещения
          type: array
          items:
            properties:
              count:
                description: Сколько размещений предоплачено
                type: integer
              count_left:
                description: Сколько осталось
                type: integer
              description:
                description: Описание пакета
                type: string
              fee_package_id:
                description: Идентификатор пакета
                type: string
              finish_time:
                description: Время окончания пакета
                format: date-time
                type: string
              is_active:
                description: Статус пакета активен/неактивен
                type: boolean
              used:
                description: Сколько размещений из пакета использовано
                type: integer
            type: object
        generated_at:
          type: string
          format: date-time
          description: Время генерации данного отчета
        status:
          description: Общий статус выгрузки
          type: string
        vas:
          description: Какие были применены услуги при данной выгрузке
          type: array
          items:
            properties:
              name:
                description: Название услуги
                type: string
              activated:
                description: В процессе применения
                type: integer
              error:
                description: Ошибка применения
                type: integer
              active:
                description: Активна на текущий момент
                type: integer
              type:
                description: |
                  Тип услуги:<br />
                  `service` - Одна услуга<br />
                  `package` - Пакет услуг<br />
                enum:
                  - service
                  - package
                type: string
            type: object
        version:
          description: Версия формата отчета
          type: string
    ErrorAutoload:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: string
              enum:
                - fail
                - success
            message:
              description: Описание ошибки
              type: string
            fields:
              description: Поля в которых возникла ошибка
              type: object
              additionalProperties:
                $ref: '#/components/schemas/FieldError'
    fieldError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          description: Код ошибки
          type: string
        message:
          description: Описание ошибки
          type: string
    validatingError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
              format: int32
              example: 400
            message:
              description: Сообщение об ошибке
              type: string
              example: Validation error
            fields:
              description: >-
                Информация об ошибке валидации параметров в формате
                ключ-значение
              type: object
    badRequestError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
              format: int32
              example: 400
            message:
              description: Сообщение об ошибке
              type: string
              example: Bad Request
    authError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
              format: int32
              example: 401
            message:
              description: Сообщение об ошибке
              type: string
              example: Unauthorized
    purchasingError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
              format: int32
              example: 402
            message:
              description: Сообщение об ошибке
              type: string
              example: Payment required
    forbiddenError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
              format: int32
              example: 403
            message:
              description: Сообщение об ошибке
              type: string
              example: Forbidden
    notFoundError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
              format: int32
              example: 404
            message:
              description: Сообщение об ошибке
              type: string
              example: Not found
    serviceUnavailableError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
              format: int32
              example: 503
            message:
              description: Описание ошибки
              type: string
              example: 'Service temporarily unavailable. Please, contact support'
    serviceError:
      type: object
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              required: true
              type: integer
              format: int32
              example: 500
            message:
              description: Описание ошибки
              type: string
              example: 'Error while processing request. Please, contact support'
    Messages:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          author_id:
            type: integer
            format: int64
            example: 94235311
          created:
            type: integer
            format: int64
            example: 1571654040
          content:
            type: object
            properties:
              text:
                type: string
                nullable: true
                example: привет!
              image:
                type: object
                nullable: true
                properties:
                  sizes:
                    type: object
                    example:
                      1280x960: >-
                        https://img.k.avito.ru/chat/1280x960/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
                      140x105: >-
                        https://img.k.avito.ru/chat/140x105/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
                      32x32: >-
                        https://img.k.avito.ru/chat/32x32/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
                      640x480: >-
                        https://img.k.avito.ru/chat/640x480/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
              link:
                type: object
                nullable: true
                properties:
                  text:
                    type: string
                    example: habr.com
                  url:
                    type: string
                    example: habr.com
                  preview:
                    type: object
                    nullable: true
                    properties:
                      url:
                        type: string
                        example: 'https://habr.com/ru/'
                      domain:
                        type: string
                        example: habr.com
                      title:
                        type: string
                        example: Лучшие публикации за сутки / Хабр
                      description:
                        type: string
                        example: Лучшие публикации за последние 24 часа
                      images:
                        type: object
                        nullable: true
                        example:
                          1280x960: >-
                            https://img.k.avito.ru/chat/1280x960/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
                          140x105: >-
                            https://img.k.avito.ru/chat/140x105/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
                          32x32: >-
                            https://img.k.avito.ru/chat/32x32/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
                          640x480: >-
                            https://img.k.avito.ru/chat/640x480/5083651369.3e798a9bf88345ae8fe85ff891266b24.jpg
              item:
                type: object
                nullable: true
                properties:
                  title:
                    type: string
                    example: Объявление
                  price_string:
                    type: string
                    nullable: true
                    example: 1 232 323 ₽
                  image_url:
                    type: string
                    example: 'https://img.k.avito.ru/140x105/5758559461.jpg'
                  item_url:
                    type: string
                    example: 'https://avito.ru/item_url'
              location:
                type: object
                nullable: true
                properties:
                  kind:
                    type: string
                    enum:
                      - house
                      - street
                    example: street
                  lat:
                    type: number
                    format: float
                    example: 55.599799
                  lon:
                    type: number
                    format: float
                    example: 37.603954
                  text:
                    type: string
                    example: 'Москва, Варшавское шоссе'
                  title:
                    type: string
                    example: 'Москва, Варшавское шоссе'
              call:
                type: object
                nullable: true
                properties:
                  status:
                    type: string
                    enum:
                      - missed
                  target_user_id:
                    type: integer
                    format: int64
                    example: 94235311
          type:
            type: string
            enum:
              - text
              - image
              - link
              - item
              - location
              - call
              - deleted
          direction:
            type: string
            enum:
              - in
              - out
            example: out
    meta:
      type: object
      properties:
        has_more:
          type: boolean
    Message:
      type: object
      properties:
        id:
          type: string
        author_id:
          type: number
        created:
          type: number
        content:
          type: object
        type:
          type: string
        direction:
          type: string
    Chat:
      type: object
      properties:
        id:
          type: string
        context:
          type: object
          properties:
            type:
              type: string
              example: item
            value:
              type: object
              properties:
                id:
                  type: integer
                  format: int32
                  example: 1768287444
                title:
                  type: string
                  example: Mazda 3 2008
                user_id:
                  type: integer
                  format: int32
                  example: 141906442
                images:
                  type: object
                  properties:
                    count:
                      type: integer
                      format: int32
                      example: 4
                    main:
                      type: object
                      properties:
                        140x105:
                          type: string
                          example: >-
                            https://01-img-staging-proxy.k.avito.ru/140x105/5815183159.jpg
                status_id:
                  type: integer
                  format: int32
                  example: 10
                price_string:
                  type: string
                  example: 300 000 ₽
                url:
                  type: string
                  example: 'https://avito.ru/moskva/avtomobili/mazda_3_2008_1768287444'
        created:
          type: integer
          format: int32
          example: 1571412836
        updated:
          type: integer
          format: int32
          example: 1571654040
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 94235311
              name:
                type: string
                example: Guldan
              public_user_profile:
                type: object
                properties:
                  user_id:
                    type: integer
                    format: int32
                    example: 94235311
                  item_id:
                    type: integer
                    format: int32
                    example: 1768287444
                  avatar:
                    type: object
                    properties:
                      default:
                        type: string
                        example: 'https://www.avito.st/stub_avatars/_/14_256x256.png'
                      images:
                        type: object
                        properties:
                          128x128:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_128x128.png'
                          192x192:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_192x192.png'
                          24x24:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_24x24.png'
                          256x256:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_256x256.png'
                          36x36:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_36x36.png'
                          48x48:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_48x48.png'
                          64x64:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_64x64.png'
                          72x72:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_72x72.png'
                          96x96:
                            type: string
                            example: 'https://www.avito.st/stub_avatars/_/14_96x96.png'
                  url:
                    type: string
                    example: >-
                      https://avito.ru/user/db65c00c946dc404e11f14755465453b/profile?id=1768287444&src=messenger
        last_message:
          type: object
          properties:
            id:
              type: string
            author_id:
              type: integer
              format: int32
              example: 94235311
            created:
              type: integer
              format: int32
              example: 1571654040
            content:
              type: object
              properties:
                link:
                  type: object
                  properties:
                    text:
                      type: string
                      example: habr.com
                    url:
                      type: string
                      example: habr.com
            type:
              type: string
              example: link
            direction:
              type: string
              example: out
    Chats:
      type: object
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/Chat'
    webhookSubscribeRequestBody:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: Url на который будут отправляться нотификации
    sendMessageRequestBody:
      type: object
      required:
        - url
      properties:
        type:
          type: string
          description: Тип сообщения
          enum:
            - text
        message:
          type: object
          properties:
            text:
              type: string
              description: Текст сообщения
    addBlacklistRequestBody:
      type: array
      items:
        type: object
        properties:
          user_id:
            type: integer
            format: int64
            example: 94235311
            description: id пользователя которого хотим заблокировать
          context:
            type: object
            properties:
              item_id:
                type: integer
                format: int64
              reason_id:
                type: integer
                description: >-
                  причина, по которой блокируем пользователя, 1 - спам, 2 -
                  мошенничество, 3 - оскорбления и хамство, 4 - другая причина
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
    UserInfoSelf:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Идентификатор пользователя
          example: 94235311
        name:
          type: string
          description: Имя пользователя
          example: Петр
        email:
          type: string
          description: Email пользователя
          example: example@domain.com
        phone:
          type: string
          description: >-
            Телефон пользователя по умолчанию. При отсутствии подтвержденного
            телефона вернется пустая строка
          example: 71112223344
        profile_url:
          type: string
          description: Ссылка на профиль пользователя
          example: 'https://avito.ru/user/7d04cdc3a12726eee72c6851c953ac54/profile'
    Balance:
      type: object
      properties:
        real:
          type: number
          format: float
          description: Сумма реальных денежных средств
        bonus:
          type: number
          format: float
          description: Сумма бонусных средств
    RequestOperationsHistory:
      type: object
      required:
        - dateTimeFrom
        - dateTimeTo
      properties:
        dateTimeFrom:
          type: string
          format: date-time
          description: Время выборки от
        dateTimeTo:
          type: string
          format: date-time
          description: >-
            Время выборки до (диапазон между dateTimeFrom и dateTimeTo должен
            быть не более одной недели)
    ResponseOperationsHistory:
      type: object
      properties:
        result:
          type: object
          properties:
            operations:
              type: array
              items:
                $ref: '#/components/schemas/ResponseOperationsHistoryItem'
    ResponseOperationsHistoryItem:
      type: object
      properties:
        updatedAt:
          type: string
          description: Дата/время совершения операции
        operationType:
          type: string
          description: Тип операции
          enum:
            - аванс
            - возврат аванса
            - резервирование средств под услугу
            - возврат зарзервированных средств на баланс кошелька
            - чарджбэк
            - постоплата
        serviceType:
          type: string
          description: Тип услуги
          enum:
            - vas
            - perf_vas
            - lf
            - cv
            - tariff
            - subscription
            - cpa
        serviceId:
          type: integer
          description: Код типа услуги
        serviceName:
          type: string
          description: Название конкретного типа услуги
        operationName:
          type: string
          description: Название операции
        amountTotal:
          type: number
          description: Сумма операции всего
        amountRub:
          type: number
          description: Сумма реальных денег
        amountBonus:
          type: number
          description: Сумма бонусов
        itemId:
          type: integer
          description: ID объявления
    AvitoItemAutoteka:
      description: Объявления на авито
      type: object
      properties:
        date:
          description: Дата подачи
          type: string
          example: 05.12.2017
        description:
          description: Описание от продавца
          type: string
          example: >-
            Продаю авто в отличном состоянии!<br>Все интересующие вопросы по
            тел.
        images:
          description: Фото из объявления
          type: array
          items:
            type: object
            properties:
              originalUrl:
                description: Оригинальное фото
                type: string
                example: 'https://10.img.avito.st/1280x960/4030786210.jpg'
              previewUrl:
                description: Фото 640x480
                type: string
                example: 'https://10.img.avito.st/640x480/4030786210.jpg'
              thumbnailUrl:
                description: Фото 140x105
                type: string
                example: 'https://10.img.avito.st/140x105/4030786210.jpg'
        mileage:
          description: Пробег из объявления
          type: integer
          format: int64
          example: 100000
        price:
          description: Цена
          type: integer
          format: int64
          example: 440000
        title:
          description: Заголовок
          type: string
          example: 'Ford Focus, 2011'
    CarImageAutoteka:
      description: Титульное фото с авито
      type: object
      properties:
        originalUrl:
          description: Оригинальное фото загруженное на avito.ru
          type: string
          example: 'https://69.img.avito.st/1280x960/3897113869.jpg'
        previewUrl:
          description: Изображение авто 640x480
          type: string
          example: 'https://69.img.avito.st/640x480/3897113869.jpg'
    CrashesHistoryAutoteka:
      description: История ДТП
      type: object
      properties:
        additional:
          description: Дополнительная информаци
          type: array
          items:
            type: string
        damageMap:
          description: Карта повреждения
          type: array
          items:
            type: string
        date:
          description: Дата в формате Unixtime
          type: integer
          format: int64
          example: 1421039400
        region:
          description: Регион ДТП
          type: string
          example: Нижегородская область
        type:
          description: Тип ДТП
          type: string
          example: Столкновение
    EquipmentAutoteka:
      description: Комплектация авто
      type: object
      properties:
        body:
          description: Тип кузова
          type: object
          properties:
            description:
              description: Текстовое значение
              type: string
              example: Хэтчбек
            title:
              description: Заголовок
              type: string
              example: Кузов
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 7
        brand:
          description: Бренд
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Бренд
            value:
              description: Текстовое значение
              type: string
              example: BMW
        color:
          description: Цвет кузова
          type: object
          properties:
            description:
              description: Текстовое значение
              type: string
              example: Синий
            title:
              description: Заголовок
              type: string
              example: Цвет
            value:
              description: Текстовое значение
              type: string
              example: Синий
        drive:
          description: Привод
          type: object
          properties:
            description:
              description: Текстовое значение
              type: string
              example: Задний
            title:
              description: Заголовок
              type: string
              example: Привод
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 2
        equipment:
          description: Название комплектации
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Комплектация
            value:
              description: Текстовое значение
              type: string
              example: Luxure
        horsepower:
          description: Количество лошадинных сил
          type: object
          properties:
            description:
              description: Текстовое значение
              type: string
              example: 265 л.с.
            title:
              description: Заголовок
              type: string
              example: Мощность
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 265
        engineType:
          description: Тип двигателя
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Тип двигателя
            value:
              description: Текстовое значение
              type: string
              example: Бензиновый
              enum:
                - Бензиновый
                - Бензиновый на сжиженном газе
                - Бензиновый на сжатом газе
                - Дизельный
                - Дизельный на сжиженном газе
                - Дизельный на сжатом газе
                - Электро-бензиновый
                - Электро-дизельный
        maxWeight:
          description: Разрешенная максимальная масса
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Разрешенная максимальная масса
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 1645
            description:
              description: Текстовое значение
              type: string
              example: 1645 кг
        netWeight:
          description: Масса без нагрузки
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Масса без нагрузки
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 1245
            description:
              description: Текстовое значение
              type: string
              example: 1245 кг
        vehicleCategory:
          description: Категория ТС
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Категория ТС
            value:
              description: Текстовое значение
              type: string
              example: D
        model:
          description: Модель
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Модель
            value:
              description: Текстовое значение
              type: string
              example: Serie 1
        modification:
          description: Модификация
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Модификация
            value:
              description: Текстовое значение
              type: string
              example: Sport
        transmission:
          description: Тип КПП
          type: object
          properties:
            description:
              description: Текстовое значение
              type: string
              example: Механическая
            title:
              description: Заголовок
              type: string
              example: Трансмиссия
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 1
        vehicle:
          description: Тип ТС
          type: object
          properties:
            description:
              description: Текстовое значение
              type: string
              example: Легковой
            title:
              description: Заголовок
              type: string
              example: Тип ТС
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 1
        volume:
          description: Объем двигателя
          type: object
          properties:
            description:
              description: Текстовое значение
              type: string
              example: 3.0 л
            title:
              description: Заголовок
              type: string
              example: Объем двигателя
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 2996
        year:
          description: Год выпуска
          type: object
          properties:
            title:
              description: Заголовок
              type: string
              example: Год выпуска
            value:
              description: Числовое значение
              type: integer
              format: int64
              example: 2008
    EventsAutoteka:
      description: Блок с предупреждениями об авто
      type: object
      properties:
        avitoOnSale:
          description: Находится ли в данный момент в продаже на Авито
          type: object
          properties:
            additionalInfo:
              description: Доп. информация по объявлению
              type: object
              properties:
                date:
                  description: Дата последнего обновления
                  type: integer
                  format: int64
                price:
                  description: Цена
                  type: integer
                  format: int64
                title:
                  description: Заголовк объявления
                  type: string
                url:
                  description: Ссылка на объявление
                  type: string
            description:
              description: Текстовое описание
              type: string
              example: Авто в продаже
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: ok
            value:
              description: 'true - находится, false - не находится'
              type: boolean
              example: true
        bodyRepair:
          description: наличие кузовных ремонтов
          type: object
          properties:
            description:
              description: Текстовое описание
              type: string
              example: 1 кузовной ремонт
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: caution
            value:
              description: есть или нет кузовные ремонты
              type: boolean
              example: true
        crashes:
          description: Наличие ДТП
          type: object
          properties:
            description:
              description: Текстовое описание
              type: string
              example: 3 ДТП
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: warning
            value:
              description: Наличие ДТП
              type: boolean
              example: true
        dealerDataAvailable:
          description: Наличие диллерских данных
          type: object
          properties:
            description:
              description: Текстовое описание
              type: string
              example: Нет данных от дилера
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: ok
            value:
              description: 'true - в отчете есть данные дилера, false - данных дилера нет'
              type: boolean
              example: true
        lastMileageRecord:
          description: Последний зафиксированный пробег
          type: object
          properties:
            description:
              description: Текстовое описание
              type: string
              example: Пробег 105 125 км
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: warning
            value:
              description: значение пробега в километрах
              type: integer
              format: int64
              example: 105125
        firstSellDate:
          description: Дата первой продажи
          type: object
          properties:
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: ok
            value:
              description: дата первой продажи
              type: string
              example: '2020-01-01'
        owners:
          description: Количество владельцев
          type: object
          properties:
            description:
              description: Количество владельце
              type: string
              example: 3 владельца
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: ok
            value:
              description: Количество владельце
              type: integer
              format: int64
              example: 3
        pledge:
          description: Наличие залогов
          type: object
          properties:
            description:
              description: Текстовое описание
              type: string
              example: Залоги не обнаружены
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: caution
            value:
              description: 'true - залог есть, false - залогов нет'
              type: boolean
              example: false
        publicPerson:
          description: Владелец частное или юридическое лицо
          type: object
          properties:
            description:
              description: Текстовое описание
              type: string
              example: Регистрация на юрлицо
            type:
              description: 'статус события `caution`, `ok`, `warning`'
              type: string
              example: ok
            value:
              description: 'владелец true - юрлицо, false -  физлицо'
              type: boolean
              example: true
    EventsOthersHistoryAutoteka:
      description: История владения
      type: object
      properties:
        date:
          description: Дата событи в формате Unixtime
          type: integer
          format: int64
          example: 1370030400
        description:
          description: подробное описание события
          type: string
          example: >-
            Расчет стоимости ремонта: 65 541 RUR <br/> НАДБАВКА ВРЕМЕНИ ОСНОВНЫЕ
            ОПЕРАЦИИ: <br/>ФАРЫ - ОТРЕГУЛИРОВАТЬ: <br/>БАМПЕР З - ЗАМ  (СНЯТ):
            <br/>КРЫЛО П ПР1 747 346: Замена<br/>
        event:
          description: Тип события текстом
          type: string
          example: Расчет стоимости ремонта
        mileage:
          description: Пробег зафиксированный во время события
          type: integer
          format: int64
          example: 105125
        source:
          description: Источник данных
          type: string
          example: Audatex
        type:
          description: >-
            Тип события `sell`, `bodyRepair`, `guaranty`, `to`, `repair`,
            `registration`, `accident`,
          type: string
          example: repair
    HeadAutoteka:
      description: Блок основных данных об авто
      type: object
      properties:
        brand:
          description: Бренд
          type: string
          example: BMW
        createdAt:
          description: Время генерации отчета в формате Unix time
          type: integer
          format: int64
          example: 1520889000
        model:
          description: Модель
          type: string
          example: x5
        vin:
          description: VIN
          type: string
          example: XUUNF487JA0007223
        year:
          description: Год
          type: integer
          format: int64
          example: 2015
    OtherAutoteka:
      description: Дополнительная информация
      type: object
      properties:
        status:
          description: 'Статус `ok`, `warning`'
          type: string
          example: ok
        text:
          description: Текстовое описание
          type: string
          example: Оригинальный ПТС (Не обнаружены сведения о выдаче дубликата ПТС)
        type:
          description: тип события `originalPTS`
          type: string
          example: originalPTS
    OwnersHistoryAutoteka:
      description: Период владения
      type: object
      properties:
        owner:
          description: Владелец
          type: string
          example: Владелец 1
        period:
          description: Период владения
          type: string
          example: Октябрь 2011 - Июнь 2013
        region:
          description: Регион владения
          type: string
          example: г. Москва
        title:
          description: Тип владельца текстом
          type: string
          example: Юридическое лицо
        type:
          description: 'Тип владельца `1` -  физлицо, `2` - юрлицо'
          type: integer
          format: int64
          example: 2
    ReportDataAutoteka:
      description: Представление отчета для партнерского API
      type: object
      properties:
        avitoItems:
          description: история публикации на avito.ru
          type: array
          items:
            $ref: '#/components/schemas/AvitoItemAutoteka'
        carImage:
          $ref: '#/components/schemas/CarImageAutoteka'
        crashesHistory:
          description: Подробная детализация ДТП
          type: array
          items:
            $ref: '#/components/schemas/CrashesHistoryAutoteka'
        equipment:
          $ref: '#/components/schemas/EquipmentAutoteka'
        events:
          $ref: '#/components/schemas/EventsAutoteka'
        eventsOthersHistory:
          description: 'История владения, включающяя все события произошедшие с авто'
          type: array
          items:
            $ref: '#/components/schemas/EventsOthersHistoryAutoteka'
        head:
          $ref: '#/components/schemas/HeadAutoteka'
        other:
          description: разное
          type: array
          items:
            $ref: '#/components/schemas/OtherAutoteka'
        ownersHistory:
          description: История регистраций авто
          type: array
          items:
            $ref: '#/components/schemas/OwnersHistoryAutoteka'
        restrictions:
          $ref: '#/components/schemas/RestrictionsAutoteka'
        priceStat:
          $ref: '#/components/schemas/PriceStatAutoteka'
        insurancePolicies:
          $ref: '#/components/schemas/InsurancePoliciesAutoteka'
        taxiData:
          $ref: '#/components/schemas/TaxiDataAutoteka'
        carsharingData:
          $ref: '#/components/schemas/CarsharingDataAutoteka'
        fines:
          $ref: '#/components/schemas/FinesAutoteka'
        serviceInfo:
          $ref: '#/components/schemas/ServiceInfoAutoteka'
    Report_autoteka:
      type: object
      required:
        - reportId
        - status
      properties:
        data:
          $ref: '#/components/schemas/ReportDataAutoteka'
        reportId:
          description: >-
            Идентификатор сгенерированного отчета, по которому его можно
            получить
          type: integer
          format: int64
          minimum: 1
          example: 1
        status:
          description: Текущий статус генерации отчет
          enum:
            - success
            - processing
          type: string
          example: processing
        pdfLink:
          description: Ссылка на скачивание pdf версии отчета
          type: string
          format: uri
          example: >-
            https://autoteka.ru/report/pdf/uuid/2b88036a-c371-4d6b-a078-3966dab04957?vin=XTA000FY9H201S000
        webLink:
          description: Ссылка на web версию отчета
          type: string
          format: uri
          example: >-
            https://autoteka.ru/report/web/uuid/2b88036a-c371-4d6b-a0ce-3966dab04966
    ReportItem_autoteka:
      type: object
      required:
        - vin
        - createdAt
        - reportId
      properties:
        vin:
          type: string
          description: ВИН-номер
          example: JSAJTDA4V00105...
        reportId:
          description: >-
            Идентификатор сгенерированного отчета, по которому его можно
            получить
          type: integer
          format: int64
          example: 1
        createdAt:
          description: Дата и время генерации отчета
          type: string
          example: '2020-09-30 16:51:32.187629'
    RestrictionsAutoteka:
      description: Ограничения
      type: object
      properties:
        pledge:
          description: Авто в залоге
          type: object
          properties:
            pledgeAdditionalData:
              description: Подробная информация
              type: array
              items:
                type: object
                properties:
                  data:
                    description: Данные о найденных залогах
                    type: array
                    items:
                      type: object
                      properties:
                        dateTo:
                          description: До какого в залоге в формате Unixtime
                          type: integer
                          format: int64
                          example: 1521089000
                  source:
                    description: 'источник `nbki`, `fciit`'
                    type: string
                    example: nbki
                  updatedAt:
                    description: Дата обновления в формате Unixtime
                    type: integer
                    format: int64
                    example: 1520889000
            status:
              description: 'Статус `ok`, `warning`'
              type: string
              example: ok
            text:
              description: Текстовое описание
              type: string
              example: Не обнаружены сведения о нахождении в залоге
        registration:
          description: Ограничения на регистрационные действия
          type: object
          properties:
            additionalInfo:
              description: Подробная информация если есть ограничения
              type: array
              items:
                type: object
                properties:
                  data:
                    type: string
                  source:
                    type: string
            status:
              description: 'Статус `ok`, `warning`'
              type: string
              example: ok
            text:
              description: Текстовое описание
              type: string
              example: Не обнаружены ограничения на регистрационные действия
        stealing:
          description: Авто в угоне
          type: object
          properties:
            additionalInfo:
              description: Подробная информация если авто в угоне
              type: array
              items:
                type: object
                properties:
                  data:
                    type: string
                  source:
                    type: string
            status:
              description: 'Статус `ok`, `warning`'
              type: string
              example: ok
            text:
              description: Текстовое описание
              type: string
              example: Не обнаружены сведения о нахождении в розыске
    PriceStatAutoteka:
      type: object
      description: Статистика
      properties:
        recaps:
          description: Суммарная информация
          type: array
          items:
            $ref: '#/components/schemas/RecapAutoteka'
        report:
          $ref: '#/components/schemas/PriceStatReportAutoteka'
        status:
          description: Полный или нет отчет
          type: string
          enum:
            - incomplete
            - ok
          example: ok
        type:
          description: Источник данных
          type: string
          example: priceStat
    PriceStatReportAutoteka:
      type: object
      description: Подробная информация
      properties:
        advertsCount:
          description: Количество объявлений
          type: integer
          format: int64
          example: 15
        averageMileage:
          description: Средний пробег
          type: integer
          format: int64
          example: 100000
        averageOwnersCount:
          description: Среднее количество владельцев
          type: number
          format: float
          example: 2.3
        price:
          type: object
          properties:
            average:
              description: Средняя цена
              type: integer
              format: int64
              example: 300000
            highest:
              description: Максимальная цена
              type: integer
              format: int64
              example: 490000
            lowest:
              description: Минимальная цена
              type: integer
              format: int64
              example: 249000
    InsurancePoliciesAutoteka:
      description: Информация о полисах ОСАГО
      type: object
      properties:
        events:
          description: Список действующих полисов ОСАГО
          type: array
          items:
            $ref: '#/components/schemas/InsurancePolicyEventAutoteka'
        recaps:
          description: Суммарная информация
          type: array
          items:
            $ref: '#/components/schemas/RecapAutoteka'
    InsurancePolicyEventAutoteka:
      description: Полис ОСАГО
      type: object
      properties:
        companyName:
          description: Страховая компания
          type: string
          example: ИНГОССТРАХ
        createDate:
          description: Дата создания полиса в формате Unixtime
          type: integer
          format: int64
          example: 1521089000
        startDate:
          description: Дата начала действия полиса в формате Unixtime
          type: integer
          format: int64
          example: 1521089000
        endDate:
          description: Дата окончания действия полиса в формате Unixtime
          type: integer
          format: int64
          example: 1621089000
        policyIsRestrict:
          description: >-
            Ограничение лиц, допущенных к управлению ТС (true - полис с
            ограничениями, false - без ограничений)
          type: boolean
          example: true
    RecapAutoteka:
      type: object
      properties:
        description:
          type: string
          nullable: true
          example: null
        label:
          type: string
          example: Обнаружено 5 неоплаченных штрафов
        status:
          type: string
          example: caution
        type:
          type: string
          example: fines
    TaxiDataAutoteka:
      description: Сведения об использовании в такси
      type: object
      properties:
        events:
          description: Список записей об использовании в такси
          type: array
          items:
            $ref: '#/components/schemas/TaxiDataEventAutoteka'
        recaps:
          description: Суммарная информация
          type: array
          items:
            $ref: '#/components/schemas/RecapAutoteka'
    TaxiDataEventAutoteka:
      description: Информация об использовании в такси
      type: object
      properties:
        regionName:
          description: Регион
          type: string
          example: Краснодарский край
        permitNumber:
          description: Номер разрешения
          type: string
          example: 51021
        dateFrom:
          description: Дата начала действия разрешения в UnixTime
          type: integer
          example: 1566507600
        dateTo:
          description: Дата окончания действия разрешения в UnixTime
          type: integer
          example: 1566507600
        isActual:
          description: Признак действующего разрешения
          type: boolean
          example: true
    CarsharingDataAutoteka:
      description: Сведения об использовании ТС в каршеринге
      type: object
      properties:
        events:
          description: Список записей об использовании ТС в каршеринге
          type: array
          items:
            $ref: '#/components/schemas/CarsharingDataEventAutoteka'
        recaps:
          description: Суммарная информация
          type: array
          items:
            $ref: '#/components/schemas/RecapAutoteka'
    CarsharingDataEventAutoteka:
      description: Информация об использовании ТС в каршеринге
      type: object
      properties:
        company:
          description: Компания эксплуатант ТС
          type: string
          example: OOO Вектор
        inaccurateData:
          description: >-
            Автомобиль мог не использоваться в каршеринге. Такое возможно, если
            компания оказывает услуги лизинга помимо каршеринга.
          type: bool
          example: false
    FinesAutoteka:
      description: Информация о штрафах
      type: object
      properties:
        requestTime:
          type: integer
          description: Дата запроса к источнику UnixTime
          example: 1566507600
        recaps:
          description: Суммарная информация
          type: array
          items:
            $ref: '#/components/schemas/RecapAutoteka'
        events:
          description: Список штрафов
          type: array
          items:
            $ref: '#/components/schemas/FineEventAutoteka'
    FineEventAutoteka:
      description: Информация о штрафе
      type: object
      properties:
        koapCode:
          type: string
          description: Статья КАОП
          example: 12.9ч.6
        koapText:
          type: string
          description: Текст статьи КОАП
          example: >-
            Повторное совершение административного правонарушения,
            предусмотренного частью 3
        status:
          type: string
          description: Неоплачен/Передан ФССП
          example: Передан в ФССП 11 ноября 2019
        sum:
          type: integer
          description: Сумма штрафа без скидки
          example: 2000
        createdAt:
          type: integer
          description: Дата правонарушения
          example: 1568669460
        numPost:
          type: string
          nullable: true
          description: Номер постановления (УИН)
          example: 12345678901234567000
    ServiceInfoAutoteka:
      description: Сервисная информация об отчете
      type: object
      properties:
        reportCompleteStatus:
          description: Информация о завершенности отчета
          type: object
          properties:
            status:
              description: 'Полный или нет отчет: `incomplete`, `ok`'
              type: string
              example: incomplete
            unavailableSources:
              description: Источники по которым не удалось получить данные
              type: array
              items:
                type: object
                properties:
                  dataType:
                    description: Тип данных
                    type: string
                    example: ownersHistory
                  source:
                    description: Источник
                    type: string
                    example: ownersHistory
    CreateReportResponseDataAutoteka:
      type: object
      properties:
        report:
          $ref: '#/components/schemas/ReportWithoutDataAutoteka'
    GetPreviewResponseDataAutoteka:
      type: object
      properties:
        preview:
          $ref: '#/components/schemas/PreviewAutoteka'
    GetReportResponseDataAutoteka:
      type: object
      properties:
        report:
          $ref: '#/components/schemas/Report_autoteka'
    GetReportsListResponseDataAutoteka:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem_autoteka'
    GetActivePackageResponseDataAutoteka:
      type: object
      properties:
        package:
          $ref: '#/components/schemas/PackageAutoteka'
    PreviewAutoteka:
      type: object
      required:
        - previewId
      properties:
        data:
          $ref: '#/components/schemas/PreviewDataAutoteka'
        previewId:
          description: Id возвращаемый в методе /v1/request-preview/
          type: integer
          format: int64
          minimum: 1
          example: 1
        status:
          description: текущий статус готовности превью
          enum:
            - success
            - processing
            - notFound
          type: string
          example: processing
        vin:
          description: VIN номер запрашиваемого авто
          type: string
          example: XUUNF487JA0007223
        regNumber:
          description: Государственный номер запрашиваемого авто
          type: string
          example: X777XX777
        sellByProSeller:
          description: >-
            Если значение поля true, то у продавца есть автомобили, которые
            размещали на Авито в течение 3 месяцев. Есть шанс, что и эта машина
            куплена для перепродажи
          type: bool
          example: false
    PreviewDataAutoteka:
      type: object
      properties:
        brand:
          description: Brand
          type: string
          example: BMW
        model:
          description: Model
          type: string
          example: X5
        year:
          description: Year
          type: integer
          format: int64
          example: 2015
    PreviewIdOnlyAutoteka:
      type: object
      required:
        - previewId
      properties:
        previewId:
          description: preview Id
          type: integer
          format: int64
          minimum: 1
          example: 1
    VinOnlyAutoteka:
      type: object
      required:
        - vin
      properties:
        vin:
          description: VIN
          type: string
          format: string
          example: XTA11110000000000
    ReportWithoutDataAutoteka:
      type: object
      required:
        - reportId
        - status
      properties:
        reportId:
          description: 'Идентификатор сгенерированно отчета, по которому его можно получить'
          type: integer
          format: int64
          minimum: 1
          example: 1
        status:
          enum:
            - success
            - processing
          description: Текущий статус генерации отчет
          type: string
          example: processing
    PackageAutoteka:
      type: object
      properties:
        createdTime:
          description: Время начала действия текущего пакета
          type: string
          example: '2018-10-23 12:37:09.264301'
        expireTime:
          description: Время окончания действия текущего пакета
          type: string
          example: '2019-08-31 23:59:59'
        reportsCnt:
          description: Количество доступных отчётов в пакете
          type: integer
          format: int64
          example: 5000
        reportsCntRemain:
          description: Текущий остаток отчётов в пакете
          type: integer
          format: int64
          example: 1754
    RequestPreviewByItemIdAutoteka:
      type: object
      required:
        - itemId
      properties:
        itemId:
          type: int
          description: Идентификатор объявления на сайте.
    RequestPreviewByRegNumberAutoteka:
      type: object
      required:
        - regNumber
      properties:
        regNumber:
          type: string
          description: государственный номер запрашиваемого авто.
    RequestPreviewByVinAutoteka:
      type: object
      required:
        - vin
      properties:
        vin:
          type: string
          description: VIN номер запрашиваемого авто.
    RequestReportByPreviewIdAutoteka:
      type: object
      required:
        - previewId
      properties:
        previewId:
          type: integer
          description: Идентификатор превью.
    RequestPreviewResponseDataAutoteka:
      type: object
      properties:
        preview:
          $ref: '#/components/schemas/PreviewIdOnlyAutoteka'
    RequestVinResponseBodyAutoteka:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/VinOnlyAutoteka'
    UpdateReportResponseDataAutoteka:
      type: object
      properties:
        report:
          $ref: '#/components/schemas/ReportWithoutDataAutoteka'
    CreateReportResponseBodyAutoteka:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CreateReportResponseDataAutoteka'
    GetPreviewResponseBodyAutoteka:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetPreviewResponseDataAutoteka'
    GetReportResponseBodyAutoteka:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetReportResponseDataAutoteka'
    RequestPreviewResponseBodyAutoteka:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/RequestPreviewResponseDataAutoteka'
    UpdateReportResponseBodyAutoteka:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UpdateReportResponseDataAutoteka'
    GetActivePackageResponseBodyAutoteka:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetActivePackageResponseDataAutoteka'
    ParamPriceItemRealty:
      type: object
      description: Параметры аренды для определённого периода
      properties:
        date_from:
          type: string
          format: date
          example: '2018-05-01'
          description: Дата начала периода
        date_to:
          type: string
          format: date
          example: '2018-05-09'
          description: Дата конца периода (исключительно)
        minimal_duration:
          type: integer
          format: int32
          example: 2
          description: Минимальная продолжительность (ночи)
        extra_guest_fee:
          type: integer
          format: int64
          example: 700
          description: Доплата за гостя (рубли)
        night_price:
          type: integer
          format: int64
          example: 1990
          description: Цена проживания за ночь (рубли)
    ParamPricesRealty:
      type: object
      description: Диапазоны дат и соответствующие им ценовые параметры
      properties:
        prices:
          type: array
          items:
            $ref: '#/components/schemas/ParamPriceItemRealty'
    PostCalendarData:
      type: object
      description: Информация о занятости объекта на определённые периоды
      properties:
        bookings:
          type: array
          description: Список броней для выбранного объекта недвижимости (объявления)
          items:
            type: object
            properties:
              date_start:
                type: string
                format: date
                example: '2018-03-23'
                description: Дата начала периода аренды
              date_end:
                type: string
                format: date
                example: '2018-04-01'
                description: Дата окончания периода аренды
    RealtyBooking:
      type: object
      description: Информация о бронировании
      properties:
        avito_booking_id:
          type: integer
          description: Идентификатор бронирования на Авито
          example: 11111
        nights:
          type: integer
          description: Количество ночей
          example: 3
        guest_count:
          type: integer
          description: Количество гостей
          example: 1
        contact:
          type: object
          description: Контактная информация гостя
          required:
            - name
            - email
          properties:
            name:
              type: string
              description: Имя гостя
              example: Иван
            phone:
              type: string
              description: Номер телефона в 10-ти значном формате (только цифры)
              example: '9997770000'
            email:
              type: string
              description: Контактный email
              example: guest_email@domain.com
        safe_deposit:
          type: object
          description: Сумма внесённой предоплаты
          properties:
            total_amount:
              type: integer
              description: Фактическая сумма предоплаты
              example: 5000
            owner_amount:
              type: integer
              description: 'Сумма, которую получит владелец объекта'
              example: 4500
            tax:
              type: integer
              description: Комиссия Авито
              example: 500
        base_price:
          type: integer
          description: Стоимость проживания на весь срок бронирования
          example: 8000
        status:
          type: string
          description: Статус брони
          enum:
            - active
            - canceled
        check_in:
          type: string
          format: date
          description: Дата заезда гостей
          example: '2018-08-01'
        check_out:
          type: string
          format: date
          description: Дата выезда гостей
          example: '2018-08-04'
    VacancyCreate:
      type: object
      required:
        - name
        - description
        - billing_type
        - business_area
        - schedule
        - experience
      properties:
        name:
          type: string
          description: Название вакансии (строка длиной от 0 до 50 символов)
        description:
          type: string
          description: Описание вакансии (строка длиной от 200 до 5000 символов)
        html_tags:
          $ref: '#/components/schemas/HtmlTags'
        billing_type:
          type: string
          description: |
            Вариант платного размещения

            Возможные значения:
              - "package" - размещение объявления осуществляется только при наличии подходящего пакета размещения
              - "packageOrSingle" - при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Авито, то произойдет разовое размещение
              - "single" - только разовое размещение, произойдет при наличии достаточной суммы на кошельке Авито; если есть подходящий пакет размещения, он будет проигнорирован
          enum:
            - package
            - single
            - packageOrSingle
        allow_messages:
          type: boolean
          description: Возможность откликнуться на вакансию через сайт
        contacts:
          $ref: '#/components/schemas/Contacts'
        custom_employer_name:
          type: string
          description: Название компании (строка длиной от 0 до 255 символов)
        address:
          type: string
          description: Полный адрес объекта (строка длиной от 0 до 256 символов)
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        salary:
          type: integer
          description: 'Зарплата, рублей в месяц'
        business_area:
          type: integer
          description: |
            Идентификатор сферы деятельности

            Возможные значения:
            - 1 - IT, интернет, телеком
            - 13 - Медицина, фармацевтика
            - 17 - Продажи
            - 19 - Страхование
            - 21 - Транспорт, логистика
            - 14 - Образование, наука
            - 20 - Строительство
            - 22 - Туризм, рестораны
            - 24 - Фитнес, салоны красоты
            - 15 - Без опыта, студенты
            - 7 - Автомобильный бизнес
            - 2 - Бухгалтерия, финансы
            - 9 - Высший менеджмент
            - 16 - Госслужба, НКО
            - 10124 - ЖКХ, эксплуатация
            - 11 - Искусство, развлечения
            - 12 - Консультирование
            - 3 - Маркетинг, реклама, PR
            - 8 - Охрана, безопасность
            - 6 - Управление персоналом
            - 23 - Юриспруденция
            - 4 - Административная работа
            - 5 - Банки, инвестиции
            - 18 - Производство, сырьё, с/х
            - 27 - Домашний персонал
        schedule:
          type: object
          required:
            - id
          description: График работы
          properties:
            id:
              type: string
              enum:
                - flyInFlyOut
                - partTime
                - fullDay
                - flexible
                - shift
                - remote
        experience:
          type: object
          required:
            - id
          description: Опыт работы
          properties:
            id:
              type: string
              enum:
                - noMatter
                - moreThan1
                - moreThan3
                - moreThan5
                - moreThan10
    VacancyUpdate:
      type: object
      required:
        - billing_type
      properties:
        name:
          type: string
          description: Название вакансии (строка длиной от 0 до 50 символов)
        description:
          type: string
          description: Описание вакансии (строка длиной от 200 до 5000 символов)
        html_tags:
          $ref: '#/components/schemas/HtmlTags'
        billing_type:
          type: string
          description: |
            Вариант платного размещения

            Возможные значения:
              - "package" - размещение объявления осуществляется только при наличии подходящего пакета размещения
              - "packageOrSingle" - при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Авито, то произойдет разовое размещение
              - "single" - только разовое размещение, произойдет при наличии достаточной суммы на кошельке Авито; если есть подходящий пакет размещения, он будет проигнорирован
          enum:
            - package
            - single
            - packageOrSingle
        allow_messages:
          type: boolean
          description: Возможность откликнуться на вакансию через сайт
        contacts:
          $ref: '#/components/schemas/Contacts'
        custom_employer_name:
          type: string
          description: Название компании (строка длиной от 0 до 255 символов)
        address:
          type: string
          description: Полный адрес объекта (строка длиной от 0 до 256 символов)
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        salary:
          type: integer
          description: 'Зарплата, рублей в месяц'
        experience:
          type: object
          required:
            - id
          description: Опыт работы
          properties:
            id:
              type: string
              enum:
                - noMatter
                - moreThan1
                - moreThan3
                - moreThan5
                - moreThan10
    VacancyProlongate:
      type: object
      required:
        - billing_type
      properties:
        billing_type:
          type: string
          description: |
            Вариант платного размещения

            Возможные значения:
              - "package" - размещение объявления осуществляется только при наличии подходящего пакета размещения
              - "packageOrSingle" - при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Авито, то произойдет разовое размещение
              - "single" - только разовое размещение, произойдет при наличии достаточной суммы на кошельке Авито; если есть подходящий пакет размещения, он будет проигнорирован
          enum:
            - package
            - single
            - packageOrSingle
    HtmlTags:
      type: bool
      description: >
        Флаг, указывающий на наличие html-тэгов в описании вакансии, для их
        специальной обработки. По умолчанию `false`


        Поддерживаемые тэги - `p`, `ul`, `ol`, `li`, `br`, `strong`, `em`
    Contacts:
      type: object
      description: Контактная информация
      properties:
        name:
          type: string
          description: >-
            Имя менеджера, контактного лица компании по данному объявлению
            (строка длиной от 0 до 40 символов)
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          description: Email (строка длиной от 0 до 255 символов)
    Phone:
      required:
        - country
        - city
        - number
      type: object
      description: Контактный телефон
      properties:
        country:
          type: string
          description: 'Код страны (строка, соответствующая шаблону "^\\+?\\d{0,5}$")'
        city:
          type: string
          description: 'Код города (строка, соответствующая шаблону "^\\d{0,6}$")'
        number:
          type: string
          description: 'Телефон (строка, соответствующая шаблону "^[\\d -]{4,32}$")'
    Coordinates:
      type: object
      required:
        - latitude
        - longitude
      description: >-
        Географические координаты (для указания точки на карте), в градусах —
        десятичные дроби
      properties:
        latitude:
          type: number
        longitude:
          type: number
    VacanctCreateResult:
      type: object
      properties:
        id:
          type: string
          description: Идентификатор добавленной вакансии.
        url:
          type: string
          descrioption: URL добавленной вакансии.
    BadRequest:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - bad_json_data
            value:
              type: string
              description: Ключ поля
            reason:
              type: string
              description: Причина возникновения ошибки (может не присутствовать)
              enum:
                - is_empty
                - wrong_value
                - chosen_area_is_not_a_leaf_or_not_exist
                - chosen_phone_belongs_to_another_user
                - no_phone_for_auto_substitution
    BadRequestShort:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - bad_json_data
            value:
              type: string
              description: Ключ поля
            reason:
              type: string
              description: Причина возникновения ошибки (может не присутствовать)
              enum:
                - is_empty
                - wrong_value
    PaymentError:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - vacancies
            value:
              type: string
              description: Значение ошибки
              enum:
                - not_enough_purchased_services
    CreationForbiddenError:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - vacancies
            value:
              type: string
              description: Значение ошибки
              enum:
                - unavailable_to_create
    EditingForbiddenError:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - vacancies
            value:
              type: string
              description: Значение ошибки
              enum:
                - chosen_vacancy_belongs_to_another_user
                - unavailable_for_blocked
                - unavailable_for_removed
                - unavailable_to_change_location
                - unavailable_to_edit
    StoppingForbiddenError:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - vacancies
            value:
              type: string
              description: Значение ошибки
              enum:
                - chosen_vacancy_belongs_to_another_user
                - unavailable_for_blocked
                - unavailable_for_removed
                - unavailable_for_rejected
                - unavailable_to_stop
    ActivationForbiddenError:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - vacancies
            value:
              type: string
              description: Значение ошибки
              enum:
                - chosen_vacancy_belongs_to_another_user
                - unavailable_for_blocked
                - unavailable_for_removed
                - too_early
                - unavailable_to_activate
    ItemNotFoundError:
      type: object
      properties:
        error:
          properties:
            type:
              type: string
              description: Тип ошибки
              enum:
                - vacancies
            value:
              type: string
              description: Значение ошибки
              enum:
                - chosen_vacancy_is_not_found
    Resume:
      type: object
      title: Информация резюме
      properties:
        id:
          type: integer
          title: Идентификатор резюме
          format: int64
          readOnly: true
          example: 2385934235
        title:
          type: string
          title: Желаемая должность
          readOnly: true
          example: Оператор Call-центра
        description:
          type: string
          title: Описание
          readOnly: true
        url:
          type: string
          title: URL объявления
          readOnly: true
        experience:
          type: array
          title: Опыт работы
          readOnly: true
          items:
            $ref: '#/components/schemas/Experience'
        education:
          type: array
          title: Образование
          readOnly: true
          items:
            $ref: '#/components/schemas/Education'
        language:
          type: array
          title: Иностранный язык
          readOnly: true
          items:
            $ref: '#/components/schemas/Language'
        location:
          $ref: '#/components/schemas/Location'
        photos:
          type: array
          title: Изображения
          readOnly: true
          items:
            $ref: '#/components/schemas/Photo'
        specialization:
          $ref: '#/components/schemas/Specialization'
        schedule:
          $ref: '#/components/schemas/WorkSchedule'
        education_level:
          $ref: '#/components/schemas/EducationLevel'
        gender:
          $ref: '#/components/schemas/Gender'
        total_experience:
          type: integer
          title: Стаж работы
          format: int32
          readOnly: true
          example: 0
        age:
          type: integer
          title: Возраст
          format: int32
          readOnly: true
          example: 19
        citizenship:
          $ref: '#/components/schemas/Citizenship'
        business_trip_readiness:
          $ref: '#/components/schemas/BusinessTripReadiness'
        relocation_readiness:
          $ref: '#/components/schemas/RelocationReadiness'
        salary:
          type: number
          title: Желаемый уровень заработной платы
          format: float
          readOnly: true
          example: 20000
        is_purchased:
          type: boolean
          title: Контакты резюме куплены
          readOnly: true
          example: false
        created:
          type: string
          title: Дата публикации
          format: date-time
          readOnly: true
        updated:
          type: string
          title: Дата последнего обновления
          format: date-time
          readOnly: true
    Resume2.0:
      type: object
      title: Информация о резюме v2.0
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор резюме
          example: 2143065041
        title:
          type: string
          description: Наименование резюме
          example: Повар-универсал
        description:
          type: string
          description: Описание резюме
          example: >-
            Повар- универсал с 15 летним опытом работы:

            повар - пекарь, шеф-поваром на судах;

            повар -универсал в экспедициях и на приисках;

            повар горячего и холодного цехов в ресторанах и кафе Москвы;

            щеф-повар в ресторанах и ночных клубах Одессы.

            Знание русской, поморской, украинской, кавказской, итальянской
            кухонь. Технология, администрирование. 

            управление персоналом.
        url:
          type: string
          description: URL резюме на сайте
          example: /moskva/rezume/povar-universal_358696_2143065041
        is_active:
          type: boolean
          description: Активность резюме
          example: true
        is_purchased:
          type: boolean
          description: Контакты резюме куплены
          example: true
        salary:
          type: integer
          format: int32
          nullable: true
          description: >-
            Зарплата. Поле может отсутствовать в ответе (выводится при наличии
            зарплаты)
          example: 60000
        start_time:
          type: string
          format: date-time (RFC3339)
          description: Дата публикации резюме
          example: '2020-08-21T08:44:12Z'
        update_time:
          type: string
          format: date-time (RFC3339)
          description: Дата последнего обновления резюме
          example: '2020-08-21T09:53:06Z'
        photos:
          type: array
          title: Изображения
          description: Присутствует в ответе только если в запросе есть флаг photos=true
          nullable: true
          items:
            $ref: '#/components/schemas/Photo'
        params:
          type: object
          description: >-
            Блок с параметрами резюме. Все поля опциональны и выводятся при
            наличии
          properties:
            ability_to_business_trip:
              type: string
              description: Готовность к командировкам
              nullable: true
              enum:
                - Не готов
                - Готов
                - Иногда
            address:
              type: string
              description: 'Место, рядом с которым вы хотите работать'
              nullable: true
              example: 'Москва, Лесная улица 7'
            age:
              type: integer
              format: int32
              description: Возраст соискателя
              nullable: true
              example: 32
            business_area:
              type: string
              description: Сфера деятельности
              nullable: true
              enum:
                - 'IT, интернет, телеком'
                - Автомобильный бизнес
                - Административная работа
                - 'Банки, инвестиции'
                - 'Без опыта, студенты'
                - 'Бухгалтерия, финансы'
                - Высший менеджмент
                - 'Госслужба, НКО'
                - Домашний персонал
                - 'ЖКХ, эксплуатация'
                - 'Искусство, развлечения'
                - Консультирование
                - 'Маркетинг, реклама, PR'
                - 'Медицина, фармацевтика'
                - 'Образование, наука'
                - 'Охрана, безопасность'
                - Продажи
                - 'Производство, сырьё, с/х'
                - Страхование
                - Строительство
                - 'Транспорт, логистика'
                - 'Туризм, рестораны'
                - Управление персоналом
                - 'Фитнес, салоны красоты'
                - Юриспруденция
            education:
              type: string
              description: Образование соискателя
              nullable: true
              enum:
                - Высшее
                - Незаконченное высшее
                - Среднее
                - Среднее специальное
            education_list:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  education_stop:
                    type: string
                    description: Дата окончания учебного заведения
                    nullable: true
                    example: 1995
                  institution:
                    type: string
                    description: Наименование учебного заведения
                    nullable: true
                    example: МГИМО МИД РФ
                  specialty:
                    type: string
                    description: Специальность
                    nullable: true
                    example: 'Финансы и кредит, экономист-международник'
            experience_list:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  company:
                    type: string
                    description: Наименование организации
                    nullable: true
                    example: МТС
                  position:
                    type: string
                    description: Занимаемая должность
                    nullable: true
                    example: Эксперт клиентского сервиса
                  responsibilities:
                    type: string
                    description: Должностные обязанности
                    nullable: true
                    example: >-
                      Принятие входящих обращений от клиентов; помощь в решении
                      возникающих вопросов; консультирование по продуктам
                      компании; продажи
                  work_finish:
                    type: string
                    description: >-
                      Дата увольнения (при отсутствии считать, что работает по
                      настоящее время)
                    format: date
                    nullable: true
                    example: '2018-09-01'
                  work_start:
                    type: string
                    description: Дата приема на работу
                    format: date
                    nullable: true
                    example: '2015-07-01'
            language_list:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  language:
                    type: string
                    description: Язык
                    nullable: true
                    example: Коми
                  language_level:
                    type: string
                    description: Уровень владения языком
                    nullable: true
                    enum:
                      - Начальный
                      - Средний
                      - Выше среднего
                      - Свободное владение
            moving:
              type: string
              description: Возможность перезда
              nullable: true
              enum:
                - Невозможен
                - Возможен
            nationality:
              type: string
              description: Гражданство соискателя
              nullable: true
              example: Филиппины
            pol:
              type: string
              description: Пол соискателя
              nullable: true
              enum:
                - Мужской
                - Женский
            razreshenie_na_rabotu_v_rossii:
              type: string
              description: Наличие разрешения на работу в России
              nullable: true
              enum:
                - Да
                - Нет
            schedule:
              type: string
              description: Предпочтительный график работы
              nullable: true
              enum:
                - Вахтовый метод
                - Неполный день
                - Полный день
                - Свободный график
                - Сменный график
                - Удалённая работа
    ResumeContact:
      type: object
      title: Контакт
      properties:
        type:
          type: string
          title: Тип контакта
          enum:
            - e-mail
            - phone
          readOnly: true
          example: e-mail
        value:
          type: string
          title: Контактные данные
          readOnly: true
          example: candidate@example.com
    ResumeContacts:
      type: object
      title: Контакты резюме
      properties:
        name:
          type: string
          title: Имя
          readOnly: true
          example: Иванов Иван
        contacts:
          type: array
          title: Контакты
          readOnly: true
          items:
            $ref: '#/components/schemas/ResumeContact'
    SimplifiedResume:
      type: object
      title: Общая информация резюме
      properties:
        id:
          type: integer
          title: Идентификатор резюме
          format: int64
          readOnly: true
          example: 2385934235
        title:
          type: string
          title: Желаемая должность
          readOnly: true
          example: Оператор Call-центра
        specialization:
          $ref: '#/components/schemas/Specialization'
        salary:
          type: number
          title: Желаемый уровень заработной платы
          format: float
          readOnly: true
          example: 20000
        location:
          $ref: '#/components/schemas/Location'
        age:
          type: integer
          title: Возраст
          format: int32
          readOnly: true
          example: 19
        education_level:
          $ref: '#/components/schemas/EducationLevel'
        gender:
          $ref: '#/components/schemas/Gender'
        total_experience:
          type: integer
          title: Стаж работы
          format: int32
          readOnly: true
          example: 0
        is_purchased:
          type: boolean
          title: Контакты резюме куплены
          readOnly: true
          example: false
        created:
          type: string
          title: Дата публикации
          format: date-time
          readOnly: true
        updated:
          type: string
          title: Дата последнего обновления
          format: date-time
    EducationLevel:
      type: string
      title: Уровень образования
      enum:
        - higher
        - unfinished-higher
        - secondary
        - special-secondary
      example: unfinished-higher
    Gender:
      type: string
      title: Пол
      enum:
        - female
        - male
      example: male
    Specialization:
      type: object
      title: Сфера деятельности
      properties:
        id:
          type: integer
          title: Идентификатор категории
          format: int64
          readOnly: true
          example: 10186
        title:
          type: string
          title: Имя категории
          readOnly: true
          example: Консультирование
    Location:
      type: object
      title: Регион
      properties:
        id:
          type: integer
          title: Идентификатор региона
          format: int64
          readOnly: true
          example: 637640
        title:
          type: string
          title: Имя региона
          readOnly: true
          example: Москва
    Experience:
      type: object
      title: Опыт работы
      properties:
        company_name:
          type: string
          title: Название компании
          readOnly: true
        title:
          type: string
          title: Должность
          readOnly: true
        start_at:
          type: string
          title: Начало работы
          format: date
          readOnly: true
        end_at:
          type: string
          title: Окончание работы
          format: date
          readOnly: true
        description:
          type: string
          title: Описание
          readOnly: true
    Education:
      type: object
      title: Образование
      properties:
        name:
          type: string
          title: Название учебного заведения
          readOnly: true
        title:
          type: string
          title: Специальность
          readOnly: true
        end_at:
          type: integer
          title: Год окончания
          format: int32
          readOnly: true
    LanguageLevel:
      type: string
      title: Уровень владения иностранным языком
      enum:
        - basic
        - middle
        - upper-middle
        - fluent
      example: basic
    Language:
      type: object
      title: Иностранный язык
      properties:
        language:
          type: object
          properties:
            id:
              type: integer
              title: Идентификатор языка
              format: int64
              readOnly: true
              example: 20125
            title:
              type: string
              title: Язык
              readOnly: true
              example: Английский
        level:
          $ref: '#/components/schemas/LanguageLevel'
    Photo:
      type: object
      title: Изображение
      properties:
        url:
          type: string
          title: URL Изображения
          readOnly: true
    WorkSchedule:
      type: string
      title: График работы
      enum:
        - partial-day
        - full-day
        - fly-in-fly-out
        - flexible
        - shift
        - remote
      example: remote
    BusinessTripReadiness:
      type: string
      title: Готовность к командировкам
      enum:
        - ready
        - never
        - sometimes
    RelocationReadiness:
      type: string
      title: Готовность к переезду
      enum:
        - possible
        - never
    Citizenship:
      type: object
      title: Гражданство
      properties:
        id:
          type: integer
          title: Идентификатор гражданства
          format: int64
          readOnly: true
          example: 15973
        title:
          type: string
          title: Имя региона
          readOnly: true
          example: Россия
    ResumeSearchMeta:
      type: object
      title: Мета-информация ответа
      properties:
        cursor:
          type: integer
          title: Курсор поиска
          format: int32
          readOnly: true
          example: 1538480436
        per_page:
          type: integer
          title: Количество записей на странице
          format: int32
          readOnly: true
          example: 25
        page:
          type: integer
          title: Номер страницы
          format: int32
          readOnly: true
          example: 1
        pages:
          type: integer
          title: Количество страниц
          format: int32
          readOnly: true
          example: 6
    NegotiationList:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Negotiation'
        meta:
          type: object
          properties:
            cursor:
              type: integer
              description: >-
                Курсор поиска, возвращается в ответе первого запроса и если не
                указан, то страница всегда начинается с первой
              format: int64
              example: 245088
            per_page:
              type: interger
              description: Количество откликов на странице
              format: int32
              example: 10
            page:
              type: integer
              description: Номер страницы
              format: int32
              example: 1
            pages:
              type: integer
              description: Количество страниц
              format: int32
              example: 31
            count:
              type: integer
              description: Количество откликов
              format: int32
              example: 334
    Negotiation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          title: Идентификатор отклика
          required: true
          example: 47774
        created_at:
          type: string
          format: date-time (RFC3339)
          description: Дата создания отклика
          example: '2020-08-21T11:49:33+03:00'
        updated_at:
          type: string
          format: date-time (RFC3339)
          description: Дата последнего обновления отклика
          example: '2020-08-22T12:33:12+03:00'
        state:
          type: string
          description: >
            Статус отклика зависит от поля type. Может принимать следующие
            значения:<br/>

            Для откликов типа `response`

            1. `new` - отклик был создан<br/>

            2. `response` - соискатель согласился отправить о себе
            информацию<br/>

            3. `discard` - соискатель отказался отправить о себе информацию<br/>

            4. `reject` - работодатель отказал соискателю<br/>

            5. `special` - настроены автоответы или другая нестандартная
            логика<br/>


            Для откликов типа `invitation`

            1. `new` - отклик был создан<br/>

            2. `phone_sent` - работодатель отправил свои контактные данные
            соискателю.
          example: response
        chat_id:
          type: string
          description: Идентификатор чата
          example: u2i-2142059193-600277161
        resume:
          type: object
          nullable: true
          description: >-
            Резюме соискателя. Выводится в откликах типа `invitation` и при
            наличии у соискателя резюме в откликах типа `response`
          properties:
            id:
              type: integer
              format: int64
              description: Идентификатор резюме
              example: 2143065041
            title:
              type: string
              description: Наименование резюме
              example: Повар-универсал
            description:
              type: string
              description: Описание резюме
              example: >-
                Повар- универсал с 15 летним опытом работы:

                повар - пекарь, шеф-поваром на судах;

                повар -универсал в экспедициях и на приисках;

                повар горячего и холодного цехов в ресторанах и кафе Москвы;

                щеф-повар в ресторанах и ночных клубах Одессы.

                Знание русской, поморской, украинской, кавказской, итальянской
                кухонь. Технология, администрирование. 

                управление персоналом.
            url:
              type: string
              description: URL резюме на сайте
              example: /moskva/rezume/povar-universal_358696_2143065041
            is_active:
              type: boolean
              description: Активность резюме
              example: true
            salary:
              type: integer
              format: int32
              nullable: true
              description: Зарплата. Выводится при наличии
              example: 60000
            start_time:
              type: string
              format: date-time (RFC3339)
              description: Дата публикации резюме
              example: '2020-08-21T08:44:12Z'
            update_time:
              type: string
              format: date-time (RFC3339)
              description: Дата последнего обновления резюме
              example: '2020-08-21T09:53:06Z'
            photos:
              type: array
              title: Изображения
              description: >-
                Присутствует в ответе только если в запросе есть флаг
                resume_photos=true
              nullable: true
              items:
                $ref: '#/components/schemas/Photo'
            params:
              type: object
              description: >-
                Блок с параметрами резюме. Все поля опциональны и выводятся при
                наличии
              properties:
                ability_to_business_trip:
                  type: string
                  description: Готовность к командировкам
                  nullable: true
                  enum:
                    - Не готов
                    - Готов
                    - Иногда
                address:
                  type: string
                  description: 'Место, рядом с которым вы хотите работать'
                  nullable: true
                  example: 'Москва, Лесная улица 7'
                age:
                  type: integer
                  format: int32
                  description: Возраст соискателя
                  nullable: true
                  example: 32
                business_area:
                  type: string
                  description: Сфера деятельности
                  nullable: true
                  enum:
                    - 'IT, интернет, телеком'
                    - Автомобильный бизнес
                    - Административная работа
                    - 'Банки, инвестиции'
                    - 'Без опыта, студенты'
                    - 'Бухгалтерия, финансы'
                    - Высший менеджмент
                    - 'Госслужба, НКО'
                    - Домашний персонал
                    - 'ЖКХ, эксплуатация'
                    - 'Искусство, развлечения'
                    - Консультирование
                    - 'Маркетинг, реклама, PR'
                    - 'Медицина, фармацевтика'
                    - 'Образование, наука'
                    - 'Охрана, безопасность'
                    - Продажи
                    - 'Производство, сырьё, с/х'
                    - Страхование
                    - Строительство
                    - 'Транспорт, логистика'
                    - 'Туризм, рестораны'
                    - Управление персоналом
                    - 'Фитнес, салоны красоты'
                    - Юриспруденция
                education:
                  type: string
                  description: Образование соискателя
                  nullable: true
                  enum:
                    - Высшее
                    - Незаконченное высшее
                    - Среднее
                    - Среднее специальное
                education_list:
                  type: array
                  nullable: true
                  items:
                    type: object
                    properties:
                      education_stop:
                        type: string
                        description: Дата окончания учебного заведения
                        nullable: true
                        example: 1995
                      institution:
                        type: string
                        description: Наименование учебного заведения
                        nullable: true
                        example: МГИМО МИД РФ
                      specialty:
                        type: string
                        description: Специальность
                        nullable: true
                        example: 'Финансы и кредит, экономист-международник'
                experience_list:
                  type: array
                  nullable: true
                  items:
                    type: object
                    properties:
                      company:
                        type: string
                        description: Наименование организации
                        nullable: true
                        example: МТС
                      position:
                        type: string
                        description: Занимаемая должность
                        nullable: true
                        example: Эксперт клиентского сервиса
                      responsibilities:
                        type: string
                        description: Должностные обязанности
                        nullable: true
                        example: >-
                          Принятие входящих обращений от клиентов; помощь в
                          решении возникающих вопросов; консультирование по
                          продуктам компании; продажи
                      work_finish:
                        type: string
                        description: >-
                          Дата увольнения (при отсутствии считать, что работает
                          по настоящее время)
                        format: date
                        nullable: true
                        example: '2018-09-01'
                      work_start:
                        type: string
                        description: Дата приема на работу
                        format: date
                        nullable: true
                        example: '2015-07-01'
                language_list:
                  type: array
                  nullable: true
                  items:
                    type: object
                    properties:
                      language:
                        type: string
                        description: Язык
                        nullable: true
                        example: Коми
                      language_level:
                        type: string
                        description: Уровень владения языком
                        nullable: true
                        enum:
                          - Начальный
                          - Средний
                          - Выше среднего
                          - Свободное владение
                moving:
                  type: string
                  description: Возможность перезда
                  nullable: true
                  enum:
                    - Невозможен
                    - Возможен
                nationality:
                  type: string
                  description: Гражданство соискателя
                  nullable: true
                  example: Филиппины
                pol:
                  type: string
                  description: Пол соискателя
                  nullable: true
                  enum:
                    - Мужской
                    - Женский
                razreshenie_na_rabotu_v_rossii:
                  type: string
                  description: Наличие разрешения на работу в России
                  nullable: true
                  enum:
                    - Да
                    - Нет
                schedule:
                  type: string
                  description: Предпочтительный график работы
                  nullable: true
                  enum:
                    - Вахтовый метод
                    - Неполный день
                    - Полный день
                    - Свободный график
                    - Сменный график
                    - Удалённая работа
        vacancy:
          type: object
          nullable: true
          description: Вакансия работодателя. Выводится в откликах типа `response`
          properties:
            id:
              type: integer
              format: int64
              description: Идентификатор вакансии
              example: 2142059193
            title:
              type: string
              description: Наименование вакансии
              example: 'Фасовщики, Упаковщики, Комплектовщики'
            description:
              type: string
              description: Описание вакансии
              example: |-
                Удобное расположение в разных районах Санкт-Петербурга.
                Опыт не обязателен.Обучение.
                График:2/2 5/2 3/3 (День,ночь)
            url:
              type: string
              description: URL вакансии на сайте
              example: >-
                /moskva/vakansii/fasovschiki_upakovschiki_komplektovschiki_469099_2142059193
            is_active:
              type: boolean
              description: Активность вакансии
              example: true
            salary:
              type: integer
              format: int32
              nullable: true
              description: Зарплата. Выводится при наличии
              example: 30000
            start_time:
              type: string
              format: date-time (RFC3339)
              description: Дата публикации вакансии
              example: '2020-08-21T08:37:36Z'
            update_time:
              type: string
              format: date-time (RFC3339)
              description: Дата последнего обновления вакансии
              example: '2020-08-21T09:39:25Z'
            params:
              type: object
              description: >-
                Блок с параметрами вакансии. Все поля опциональны и выводятся
                при наличии
              properties:
                address:
                  type: string
                  description: Место работы
                  nullable: true
                  example: 'Москва, Лесная улица 7'
                business_area:
                  type: string
                  description: Сфера деятельности
                  nullable: true
                  enum:
                    - 'IT, интернет, телеком'
                    - Автомобильный бизнес
                    - Административная работа
                    - 'Банки, инвестиции'
                    - 'Без опыта, студенты'
                    - 'Бухгалтерия, финансы'
                    - Высший менеджмент
                    - 'Госслужба, НКО'
                    - Домашний персонал
                    - 'ЖКХ, эксплуатация'
                    - 'Искусство, развлечения'
                    - Консультирование
                    - 'Маркетинг, реклама, PR'
                    - 'Медицина, фармацевтика'
                    - 'Образование, наука'
                    - 'Охрана, безопасность'
                    - Продажи
                    - 'Производство, сырьё, с/х'
                    - Страхование
                    - Строительство
                    - 'Транспорт, логистика'
                    - 'Туризм, рестораны'
                    - Управление персоналом
                    - 'Фитнес, салоны красоты'
                    - Юриспруденция
                experience:
                  type: string
                  description: Требуемый опыт работы
                  nullable: true
                  enum:
                    - Не имеет значения
                    - Более 1 года
                    - Более 3 лет
                    - Более 5 лет
                    - Более 10 лет
                schedule:
                  type: string
                  description: График работы
                  nullable: true
                  enum:
                    - Вахтовый метод
                    - Неполный день
                    - Полный день
                    - Свободный график
                    - Сменный график
                    - Удалённая работа
        called:
          type: boolean
          description: Отклик был создан через звонок
          example: false
        company_name:
          type: string
          description: Наименование компании
          example: Билайн
        manager_name:
          type: string
          nullable: true
          description: Имя менеджера компании
          example: Владислав
        type:
          type: string
          description: |
            Тип отклика<br/>
            `response` - соискатель откликнулся на вакансию<br/>
            `invitation` - работодатель пригласил соискателя по резюме
          example: response
        user:
          type: object
          properties:
            id:
              type: integer
              format: int64
              description: Идентификатор соискателя
              example: 41253
            profile_link:
              type: string
              description: Ссылка на профиль соискателя
              example: /user/7d04cdc3a12726eee72c6851c953ac54/profile
        contact:
          type: object
          properties:
            name:
              type: string
              description: Имя соискателя
              example: Валентин
            phone:
              type: string
              nullable: true
              description: >-
                Номер телефона соискателя. Выводится при наличии разрешения от
                соискателя
              example: 72002000014
            chat_link:
              type: string
              description: Ссылка на чат с соискателем
              example: /profile/messenger/channel/u2i-2142059193-600277161
    CallsByTime:
      type: object
      required:
        - dateTimeFrom
        - limit
      properties:
        dateTimeFrom:
          type: string
          description: >-
            Время с которого нужно начинать поиск звонков по createTime (строка
            в формате RFC3339)
        limit:
          type: integer
          description: Размер выборки
          format: int64
        offset:
          type: integer
          description: >
            Смещение выборки (по-умолчанию 0). Для улучшения производительности
            лучше использовать

            максимальный createTime звонка из предыдущей выборки
          format: int64
    Call:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор звонка
        recordUrl:
          type: string
          description: Ссылка на запись звонка
        startTime:
          type: string
          description: Время начала разговора (строка в формате RFC3339)
        createTime:
          type: string
          description: Время поступления звонка (строка в формате RFC3339)
        buyerPhone:
          type: string
          description: Телефонный номер покупателя
        virtualPhone:
          type: string
          description: Виртуальный телефонный номер продавца
        sellerPhone:
          type: string
          description: Реальный телефонный номер продавца
        itemId:
          type: integer
          format: int64
          description: Идентификатор объявления
        isArbitrageAvailable:
          type: bool
          description: 'Флаг, указывающий на то, доступен ли арбитраж по звонку'
        statusId:
          type: integer
          format: int64
          description: >
            Статус звонка (0 - целевой, 1 - на модерации, 2 - помечен как
            целевой после модерации,

            3 - помечен как нецелевой после модерации)
          enum:
            - 0
            - 1
            - 2
            - 3
        price:
          type: integer
          format: int64
          description: Цена звонка CPA
        duration:
          description: Время разговора
          type: integer
        waitingDuration:
          description: Время ожидания
          type: number
    CpaError:
      type: object
      properties:
        code:
          type: integer
          format: int64
          description: |
            Внутренний код ошибки

            Возможные значения:
            - 1000 - пустой запрос
            - 1001 - ошибка валидации
            - 1002 - ошибка авторизации
            - 1003 - внутренняя ошибка
            - 1004 - не найдено
        message:
          type: string
          description: Текст ошибки
    CreateComplaint:
      type: object
      required:
        - callId
        - message
      properties:
        callId:
          type: integer
          format: int64
          description: Идентификатор звонка
        message:
          type: string
          description: Текст жалобы
    CallById:
      type: object
      required:
        - callId
      properties:
        callId:
          type: integer
          format: int64
          description: Идентификатор звонка
    StatisticsItemIDs:
      type: array
      description: Набор идентификаторов объявлений на сайте
      required: true
      items:
        type: integer
      example:
        - 123456789
        - 987654321
    StatisticsDateFrom:
      type: string
      description: >-
        Дата (в формате YYYY-MM-DD), с которой (включительно) надо получить
        статистику
      required: true
      example: '2020-01-01'
    StatisticsDateTo:
      type: string
      description: >-
        Дата (в формате YYYY-MM-DD), по которую (включительно) надо получить
        статистику
      required: true
      example: '2020-01-01'
    StatisticsFields:
      type: array
      description: 'Набор счетчиков, которые должны присутствовать в ответе'
      optional: true
      items:
        type: string
        enum:
          - views
          - uniqViews
          - contacts
          - uniqContacts
          - favorites
          - uniqFavorites
    StatisticsGroupBy:
      type: string
      description: Период группировки счетчиков
      optional: true
      enum:
        - day
        - week
        - month
    StatisticsSortBy:
      type: string
      description: Сортировать по указанному счетчику
      optional: true
      enum:
        - views
        - uniqViews
        - contacts
        - uniqContacts
        - favorites
        - uniqFavorites
    StatisticsSortOrder:
      type: string
      description: Направление сортировки
      optional: true
      enum:
        - ASC
        - DESC
    StatisticsShallowRequestBody:
      type: object
      properties:
        itemIds:
          $ref: '#/components/schemas/StatisticsItemIDs'
        dateFrom:
          $ref: '#/components/schemas/StatisticsDateFrom'
        dateTo:
          $ref: '#/components/schemas/StatisticsDateTo'
        fields:
          $ref: '#/components/schemas/StatisticsFields'
    StatisticsDeepRequestBody:
      type: object
      properties:
        dateFrom:
          $ref: '#/components/schemas/StatisticsDateFrom'
        dateTo:
          $ref: '#/components/schemas/StatisticsDateTo'
        fields:
          $ref: '#/components/schemas/StatisticsFields'
    StatisticsCounters:
      type: object
      properties:
        stats:
          type: array
          items:
            type: object
            properties:
              itemId:
                type: integer
                format: int64
                description: Идентификатор объявления
              stats:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: date
                      description: >-
                        Дата (в формате YYYY-MM-DD), за которую посчитаны
                        статистические счетчики. Для группировок по периодам -
                        дата начала периода.
                      required: true
                    views:
                      type: integer
                      description: Просмотры объявления
                      optional: true
                    uniqViews:
                      type: integer
                      description: 'Уникальные пользователи, просматривавшие объявления'
                      optional: true
                    contacts:
                      type: integer
                      description: Запросы контактов объявления
                      optional: true
                    uniqContacts:
                      type: integer
                      description: >-
                        Уникальные пользрователи, запрашивавшие контакты
                        объявления
                      optional: true
                    favorites:
                      type: integer
                      description: Добавления объявления в избранное
                      optional: true
                    uniqFavorites:
                      type: integer
                      description: >-
                        Уникальные пользователи, добавившие объявление в
                        избранное
                      optional: true
    StatisticsItemNew:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
          description: Идентификатор объявления
        stats:
          type: array
          items:
            type: object
            properties:
              date:
                type: date
                description: >-
                  Дата (в формате YYYY-MM-DD), за которую посчитаны
                  статистические счетчики. Для группировок по периодам -
                  дата начала периода.
                required: true
              views:
                type: integer
                description: Просмотры объявления
                optional: true
              uniqViews:
                type: integer
                description: 'Уникальные пользователи, просматривавшие объявления'
                optional: true
              contacts:
                type: integer
                description: Запросы контактов объявления
                optional: true
              uniqContacts:
                type: integer
                description: >-
                  Уникальные пользрователи, запрашивавшие контакты
                  объявления
                optional: true
              favorites:
                type: integer
                description: Добавления объявления в избранное
                optional: true
              uniqFavorites:
                type: integer
                description: >-
                  Уникальные пользователи, добавившие объявление в
                  избранное
                optional: true
    StatisticsResponseNew:
      type: object
      properties:
        result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/StatisticsItemNew'
    StatisticsResponse:
      type: object
      properties:
        stats:
          description: Статистические счетчики объявления
          type: array
          items:
            $ref: '#/components/schemas/StatisticsCounters'
        errors:
          type: object
    ShipmentInfoRequest:
      properties:
        shipmentID:
          description: Уникальный идентификатор отправления
          type: integer
          example: 1
      type: object
      required:
        - shipmentID
    ShipmentListRequest:
      properties:
        filter:
          $ref: '#/components/schemas/ShipmentFilter'
        order:
          description: Направление сортировки
          type: string
          example: asc
          nullable: true
        page:
          description: Номер запрашиваемой страницы списка отправлений
          type: integer
          example: 1
          minimum: 1
          nullable: true
        pageSize:
          description: 'Количество отправлений, возвращаемых за один запрос'
          type: integer
          example: 50
          minimum: 1
          maximum: 50
          nullable: true
        sort:
          description: Название атрибута для сортировки
          type: string
          example: id
          nullable: true
      type: object
    ShipmentFilter:
      properties:
        ids:
          description: Список идентификаотров отправлений
          items:
            type: integer
          type: array
          nullable: true
        dateFrom:
          description: 'Метка времени, с момента которого создано отправление'
          type: integer
          example: 1597724990
          nullable: true
        dateTo:
          description: 'Метка времени, до которого создано отправление'
          type: integer
          example: 1597724990
          nullable: true
        statuses:
          description: Список статусов в которых находится отправление
          items:
            type: string
            example: new
          type: array
          nullable: true
      type: object
    ShipmentListReply:
      properties:
        data:
          description: |
            Список отправлений, найденных по заданным условиям поиска
          items:
            $ref: '#/components/schemas/ShipmentReply'
          type: array
        hasMore:
          description: |
            Доступна ли следующая страница списка отправлений
          type: boolean
          example: true
      required:
        - data
        - hasMore
      type: object
    ShipmentReply:
      properties:
        shipmentID:
          description: Уникальный идентификатор отправления
          type: integer
          example: 1
        status:
          description: Текущий статус отправления
          type: string
          example: new
        items:
          description: Список товарных позиций в отправлении
          items:
            $ref: '#/components/schemas/ItemReply'
          type: array
        created:
          description: Метка времени создания
          type: integer
          example: 1597724990
      required:
        - shipmentID
        - status
        - created
      type: object
    ItemReply:
      properties:
        id:
          description: Уникальный идентификатор товара в отправлении
          type: integer
        name:
          description: Название товарной позиции
          type: string
        price:
          description: Стоимость товарной позиции
          type: integer
        offerID:
          description: Идентификатор товара в системе продавца
          type: string
        productID:
          description: Идентификатор предложения в системе Авито
          type: integer
        quantity:
          description: Количество товарных позиций
          type: integer
          example: 3
          minimum: 1
      required:
        - id
        - name
        - price
        - offerID
        - productID
        - quantity
        - created
      type: object
    ShipmentConfirmRequest:
      properties:
        shipmentID:
          description: Уникальный идентификатор отправления
          type: integer
          example: 1
      required:
        - shipmentID
      type: object
    ShipmentConfirmReply:
      properties:
        success:
          description: Результат выполнения операции
          type: boolean
      required:
        - success
      type: object
    ShipmentRejectRequest:
      properties:
        shipmentID:
          description: Уникальный идентификатор отправления
          type: integer
          example: 1
        reasonCode:
          description: Код причины
          type: string
          enum:
            - OUT_OF_STOCK
            - INCORRECT_PRICE
            - NOT_TIME_FOR_SHIPPING
            - INCORRECT_SPEC
          example: OUT_OF_STOCK
      required:
        - shipmentID
        - reasonCode
      type: object
    ShipmentRejectReply:
      properties:
        success:
          description: Результат выполнения операции
          type: boolean
      required:
        - success
      type: object
    ShipmentAssembleRequest:
      properties:
        shipmentID:
          description: Уникальный идентификатор отправления
          type: integer
          example: 1
      required:
        - shipmentID
      type: object
    ShipmentAssembleReply:
      properties:
        success:
          description: Результат выполнения операции
          type: boolean
      required:
        - success
      type: object
    ShipmentPickUpRequest:
      properties:
        shipmentID:
          description: Уникальный идентификатор отправления
          type: integer
          example: 1
      required:
        - shipmentID
      type: object
    ShipmentPickUpReply:
      properties:
        success:
          description: Результат выполнения операции
          type: boolean
      required:
        - success
      type: object
    ShipmentCreateAcceptanceCertReply:
      properties:
        acceptance_cert:
          description: 'Строка, содержащая акт приема-передачи в формате PDF'
          type: string
      required:
        - acceptance_cert
      type: object
    ErrorReply:
      properties:
        message:
          description: Сообщение об ошибке
          type: string
        code:
          description: Код ошибки
          type: integer
        name:
          description: Название ошибки
          type: string
          enum:
            - not_authorized
            - bad_parameter
            - bad_request
      required:
        - message
        - code
      type: object
